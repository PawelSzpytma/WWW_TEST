<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HiQPdfClient.NetCore</name>
    </assembly>
    <members>
        <member name="T:HiQPdfClient.AutoPdfForm">
            <summary>
            Controls the automatic conversion of the HTML form into a PDF form
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.AutoCreatePdfForm">
            <summary>
            Controls if the HTML form is automatically converted to a PDF form. 
            This property is false by default.
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.SubmitButtons">
            <summary>
            Controls the style and properties of the automatically created submit buttons
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.TextBoxes">
            <summary>
            Controls the style and properties of the automatically created text box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.TextAreas">
            <summary>
            Controls the style and properties of the automatically created multiline text box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.PasswordBoxes">
            <summary>
            Controls the style and properties of the automatically created password text box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.ComboBoxes">
            <summary>
            Controls the style and properties of the automatically created combo box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.ListBoxes">
            <summary>
            Controls the style and properties of the automatically created list box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.CheckBoxes">
            <summary>
            Controls the style and properties of the automatically created check box fields
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfForm.RadioButtonsGroups">
            <summary>
            Controls the style and properties of the automatically created radio button groups
            </summary>
        </member>
        <member name="T:HiQPdfClient.AutoPdfFormField">
            <summary>
            Controls the style and properties of a type of field in automatically created PDF form
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.BorderStyle">
            <summary>
            The automatically created form field border style
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.BackColor">
            <summary>
            The automatically created form field background color
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.ForeColor">
            <summary>
            The automatically created form field fore color
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.BorderColor">
            <summary>
            The automatically created form field border color
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.Font">
            <summary>
            The automatically created form field font
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.Flatten">
            <summary>
            Controls if the automatically created field is flattened in PDF. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.ReadOnly">
            <summary>
            Controls if the automatically created field is read only in PDF. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.Required">
            <summary>
            Controls if the automatically created field is required to have a value when the PDF form is submitted. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.AutoPdfFormField.Export">
            <summary>
            Controls if the automatically created field value is exported when the PDF form is submitted. This property is true by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.BrowserImpersonation">
            <summary>
            The browser impersonation settings used when accessing the HTML document to be converted
            </summary>
        </member>
        <member name="P:HiQPdfClient.BrowserImpersonation.ImpersonateCurrentUser">
            <summary>
            When this property is true the internal browser will run in the security context of user calling the converter.
            The default property value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.BrowserImpersonation.Username">
            <summary>
            When this property is not empty the converter will try to run the internal browser in the security context of the user
            given by this property and the <see cref="P:HiQPdfClient.BrowserImpersonation.UserDomain"/> property. 
            The default property value is empty
            </summary>
        </member>
        <member name="P:HiQPdfClient.BrowserImpersonation.UserDomain">
            <summary>
            This property must be set when the <see cref="P:HiQPdfClient.BrowserImpersonation.Username"/> property is set to select the user security context 
            in which the internal browser will run. If the user is not part of a Windows domain the machine name must be used as domain name. 
            The default property value is empty
            </summary>
        </member>
        <member name="P:HiQPdfClient.BrowserImpersonation.Password">
            <summary>
            The password of the user which will run the internal browser. This property must be set when the 
            <see cref="P:HiQPdfClient.BrowserImpersonation.Username"/> property is set. 
            The default property value is empty
            </summary>
        </member>
        <member name="P:HiQPdfClient.BrowserImpersonation.AutoLogon">
            <summary>
            This property has effect only when <see cref="P:HiQPdfClient.BrowserImpersonation.Username"/> is also set.
            It controls if the logon of the user is automatic or explicit. The default property value is true
            </summary>
        </member>
        <member name="T:HiQPdfClient.CertificatesStoreTypes">
            <summary>
            The types of system certificates stores that can be used by library
            </summary>
        </member>
        <member name="F:HiQPdfClient.CertificatesStoreTypes.Personal">
            <summary>
            A certificate store that holds certificates with associated private keys
            </summary>
        </member>
        <member name="F:HiQPdfClient.CertificatesStoreTypes.Root">
            <summary>
            Root certificates
            </summary>
        </member>
        <member name="F:HiQPdfClient.CertificatesStoreTypes.CertificationAuthority">
            <summary>
            Certification authority certificates
            </summary>
        </member>
        <member name="F:HiQPdfClient.CertificatesStoreTypes.Publishers">
            <summary>
            Software publishers certificates
            </summary>
        </member>
        <member name="T:HiQPdfClient.ConversionTriggerMode">
            <summary>
            The possible options for triggering the conversion after the page was loaded in converter
            </summary>
        </member>
        <member name="F:HiQPdfClient.ConversionTriggerMode.Auto">
            <summary>
            The conversion is automatically started immediately after the page was loaded in converter. This is the default option
            </summary>
        </member>
        <member name="F:HiQPdfClient.ConversionTriggerMode.WaitTime">
            <summary>
            The converter will wait a constant additional time given by the <see cref="P:HiQPdfClient.HtmlConverterBase.WaitBeforeConvert"/> property of the 
            <see cref="T:HiQPdfClient.HtmlToPdf"/> class before starting the conversion 
            to allow more time to JavaScript to update the web page
            </summary>
        </member>
        <member name="F:HiQPdfClient.ConversionTriggerMode.Manual">
            <summary>
            The conversion will be triggered manually by a call from JavaScript to hiqPdfConverter.startConversion() method 
            available in web page after the page was loaded in converter
            </summary>
        </member>
        <member name="T:HiQPdfClient.DateAndTime">
            <summary>
            The date and time class
            </summary>
        </member>
        <member name="M:HiQPdfClient.DateAndTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a date and time object
            </summary>
            <param name="year">Year</param>
            <param name="month">month</param>
            <param name="day">Day</param>
            <param name="hour">Hour</param>
            <param name="min">Minute</param>
            <param name="sec">Second</param>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Hour">
            <summary>
            Hour
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Min">
            <summary>
            Minute
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Sec">
            <summary>
            Second
            </summary>
        </member>
        <member name="P:HiQPdfClient.DateAndTime.Empty">
            <summary>
            The null DateAndTime
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlConversionInfo">
            <summary>
            An object of this class is created after a HTML conversion and contains information about the converted HTML document,
            about the HTML elements in the HTML document and about the regions rendered in a PDF document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConversionInfo.HtmlHeader">
            <summary>
            The HTML document header containing the title, keywords and description of the HTML document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConversionInfo.SelectedHtmlElementsInfo">
            <summary>
            Returns a collection of <see cref="T:HiQPdfClient.HtmlElementInfo"/> objects containing one object for each HTML element selected by the <see cref="P:HiQPdfClient.HtmlToPdf.SelectedHtmlElements"/> property
            property of the <see cref="T:HiQPdfClient.HtmlToPdf"/> class.
            A <see cref="T:HiQPdfClient.HtmlElementInfo"/> object offers detailed information about a HTML element like its position in the generated PDF document, the HTML id, the tag name, the HTML code of the element, etc.
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConversionInfo.PdfRegions">
            <summary>
            The regions in PDF rendered by a HTML to PDF conversion. 
            For each PDF page rendered there is <see cref="T:HiQPdfClient.PdfPageRegion"/> object in the array returned by this property
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlConverterBase">
            <summary>
            The base class for HTML converters 
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlConverterBase.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a HTML converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the HTML to PDF server</param>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Server">
            <summary>
            The server IP address or host name
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.ServerPassword">
            <summary>
            The password to access the HTML to PDF server if the server is password protected
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.SerialNumber">
            <summary>
            The serial number obtained after product purchase. This property can be set to null or can be left not set to enter evaluation mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.TriggerMode">
            <summary>
            The method of triggering the conversion
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.WaitBeforeConvert">
            <summary>
            An additional time in seconds to wait before starting the conversion to allow more time to JavaScript to update the web page.
            When the property is set with a positive value the <see cref="P:HiQPdfClient.HtmlObjectBase.TriggerMode"/> property is automatically set to <see cref="F:HiQPdfClient.ConversionTriggerMode.WaitTime"/>.
            This property has effect only if the <see cref="P:HiQPdfClient.HtmlConverterBase.TriggerMode"/> property is <see cref="F:HiQPdfClient.ConversionTriggerMode.WaitTime"/>.
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.ManualTriggerWaitBeforeConvert">
            <summary>
            An additional time in seconds to wait before starting the conversion when the triggering mode is set to manual
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.HtmlLoadedTimeout">
            <summary>
            The maximum time in seconds to wait for HTML document to be loaded. The default value is 120 seconds.
            An exception is thrown if the HTML document cannot be loaded in HtmlLoadedTimeout seconds
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.ConvertedHtmlElementSelector">
            <summary>
            This property can be set with a value representing the CSS selector of the HTML element to be converted.
            If many elements in the HTML document are selected, only the the first one will be converted. The values
            of the attributes in the CSS selectors are case sensitive. If this property is not set then the whole 
            HTML document is converted
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.BrowserUserAgent">
            <summary>
            The browser custom user agent
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.BrowserWidth">
            <summary>
            The browser window width in pixels. The default width is 1200 pixels
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.BrowserHeight">
            <summary>
            The browser window height in pixels. The default height is set to render the entire HTML document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.BrowserZoom">
            <summary>
            The browser window zoom percentage. The default zoom is 100
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.DefaultCharset">
            <summary>
            The default character set to be used when the character set meta tag is not set in HTML document header
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.MaxBrowserHeight">
            <summary>
            This property can be used to set a maximum limit in pixels for the rendered top part of a HTML document.
            The default value is 0 and the height is not limited
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.MinBrowserHeight">
            <summary>
            This property can be used to set a minimum height in pixels to be rendered. The default value is 0 pixels.
            This property is ignored when the <see cref="P:HiQPdfClient.HtmlConverterBase.BrowserHeight"/> property is set
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.StartBrowserHeight">
            <summary>
            This property can be used to set the starting height in pixels of the browser.
            This property is ignored when the <see cref="P:HiQPdfClient.HtmlConverterBase.BrowserHeight"/> property is set
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.MaxImageTileHeight">
            <summary>
            The maximum height in pixels of the image tiles captured by converter
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Authentication">
            <summary>
            The object exposed by this propery encapsulates a username and a password that can be used 
            to access web pages requiring HTTP authentication
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Impersonation">
            <summary>
            The object exposed by this propery encapsulates the properties controlling the internal browser impersonation
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Proxy">
            <summary>
            The object exposed by this property encapsulates the parameters (address, username, password) that can be used 
            to access web pages through a proxy server
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.HttpHeaders">
            <summary>
            A collection of the HTTP headers to be used when accessing a web page
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.RepeatHttpHeaders">
            <summary>
            This property controls if the headers defined by the <see cref="P:HiQPdfClient.HtmlConverterBase.HttpHeaders"/> property are also used when accessing the resources referenced by the 
            web page, not only when accessing the web page. The default value is true and the headers are repeated when accessing the referenced resources
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.HttpCookies">
            <summary>
            A collection of HTTP cookies to be used when accessing a web page
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.HttpPostFields">
            <summary>
            A collection of HTTP POST fields to be used when accessing a web page.
            If the collection is not empty, the converter will make a POST request to the web page URL 
            with the fields from this collection
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.MediaType">
            <summary>
            Controls the media type for which to render the HTML document. If this property is null or empty the default media type is 'screen'. 
            It can be set to a value like 'print' and in this case the CSS properties defined by the '@media print' rule will be used when the HTML is rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.RenderSvgFonts">
            <summary>
            Controls if the SVG fonts are rendered. The default value is false when converting HTML to PDF or SVG and true when converting HTML to a raster image
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.RenderWebFonts">
            <summary>
            Controls if the Web Fonts are rendered. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Http2Enabled">
            <summary>
            Controls if the HTTP2 protocol is enabled in NG version. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.LayoutWithHinting">
            <summary>
            Controls if the hinting is used to layout HTML. Layout hinting is disabled by default.
            Enabling this property can improve the layout but it can make the conversion slower
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.RunJavaScript">
            <summary>
            Controls if the JavaScript in the HTML document is executed. The default value of this property is true and the JavaScript is executed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.RunExtensions">
            <summary>
            Controls if the browser extensions like Flash players are executed. The default value is false and no extension is executed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.StopSlowScripts">
            <summary>
            Controls if the browser should interrupt slow scripts in the web page. The default value is false and the scripts are not stopped
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.ForceResourcesDownload">
            <summary>
            Controls if the HTML converter should force all possible resources to be downloaded. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.ProbeLayout">
            <summary>
            Controls if the HTML converter should do a probe layout first. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.Transform3DEnabled">
            <summary>
            Controls if the 3D transformations are enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.WebGLEnabled">
            <summary>
            Controls if the WebGL is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.AcceleratedCanvasEnabled">
            <summary>
            Controls if the accelerated canvas is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.LocalStorageEnabled">
            <summary>
            Controls if the local web storage is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlConverterBase.LocalFilesLoadEnabled">
            <summary>
            Controls if the local files can be loaded by converter. This property is true by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlDocumentHeader">
            <summary>
            An object of this type is created after HTML to PDF conversion and offers information about the 
            document title and metadata
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlDocumentHeader.Title">
            <summary>
            The HTML document title as defined by title tag or an empty string if there is no title defined in HTML
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlDocumentHeader.Keywords">
            <summary>
            The HTML document keywords as defined by the keywords meta tag or an empty string if there is not a keywords meta tag
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlDocumentHeader.Description">
            <summary>
            The HTML document description as defined by the description meta tag or an empty string if there is not a description meta tag
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlDocumentHeader.Subject">
            <summary>
            The HTML document subject as defined by the subject meta tag or an empty string if there is not a subject meta tag
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlDocumentHeader.Author">
            <summary>
            The HTML document author as defined by the author meta tag or an empty string if there is not an author meta tag
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlElementAttribute">
            <summary>
            The HTML attribute class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlElementAttribute.#ctor">
            <summary>
            Constructs an empty HTML attribute
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlElementAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructs a HTML element attribute with the given name and value
            </summary>
            <param name="attributeName">The attribute name</param>
            <param name="attributeValue">The attribute value</param>
        </member>
        <member name="P:HiQPdfClient.HtmlElementAttribute.Name">
            <summary>
            The attribute name
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementAttribute.Value">
            <summary>
            The attribute value
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlElementInfo">
            <summary>
            Encapsulates various details about a HTML element collected during conversion
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.PdfRegions">
            <summary>
            The regions in PDF document where the element is rendered. An element can be rendered on many PDF pages
            and for each PDF page there is <see cref="T:HiQPdfClient.PdfPageRegion"/> object in the array returned by this property
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.ID">
            <summary>
            The HTML element ID
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.CollectID">
            <summary>
            The element collect ID given by the data-collect-id attribute in HTML
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.Text">
            <summary>
            The HTML element text or an empty string if the element has no title (e.g. images)
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.Html">
            <summary>
            The HTML element code 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.InnerHtml">
            <summary>
            The HTML element code between the HTML tags
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.Tag">
            <summary>
            The HTML tag name of the HTML element
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.CssClass">
            <summary>
            The HTML element CSS class
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfo.Attributes">
            <summary>
            The HTML element attributes
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlElementInfoCollection">
            <summary>
            A collection of <see cref="T:HiQPdfClient.HtmlElementInfo"/> objects 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfoCollection.Count">
            <summary>
            The number of <see cref="T:HiQPdfClient.HtmlElementInfo"/> objects in collection.
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlElementInfoCollection.Clear">
            <summary>
            Removes all the elements from the HTML elements info collection
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlElementInfoCollection.Item(System.Int32)">
            <summary>
            Returns the <see cref="T:HiQPdfClient.HtmlElementInfo"/> object at the given index in collection
            </summary>
            <param name="index">The index in collection</param>
            <returns>The <see cref="T:HiQPdfClient.HtmlElementInfo"/> object at the given index in collection</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlElementInfoCollection.FindElementByID(System.String)">
            <summary>
            Searches a <see cref="T:HiQPdfClient.HtmlElementInfo"/> object in collection of retrieved HTML elements by HTML element ID        
            </summary>
            <param name="id">The case insensitive ID of the element</param>
            <returns>The <see cref="T:HiQPdfClient.HtmlElementInfo"/> matching the ID</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlElementInfoCollection.FindElementByCollectID(System.String)">
            <summary>
            Searches a <see cref="T:HiQPdfClient.HtmlElementInfo"/> object in collection of retrieved HTML elements by collect ID defined with the data-collect-id attribute in HTML        
            </summary>
            <param name="collectId">The case insensitive collect ID of the element</param>
            <returns>The <see cref="T:HiQPdfClient.HtmlElementInfo"/> matching the collect ID</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlElementInfoCollection.FindElementByTag(System.String)">
            <summary>
            Searches a <see cref="T:HiQPdfClient.HtmlElementInfo"/> in collection by HTML element tag name 
            </summary>
            <param name="tag">The case insensitive HTML element tag</param>
            <returns>The <see cref="T:HiQPdfClient.HtmlElementInfo"/> matching the tag name</returns>
        </member>
        <member name="T:HiQPdfClient.HtmlObjectBase">
            <summary>
            The base class for HTML converter objects
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ConversionInfo">
            <summary>
            This property is initialized after conversion with an object containing information about the converted HTML document,
            about the HTML elements in the HTML document and about the regions rendered in the PDF document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.TriggerMode">
            <summary>
            The method of triggering the conversion in HTML object. The default value is Auto
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.WaitBeforeConvert">
            <summary>
            An additional  time in seconds to wait before starting the conversion to allow more time to JavaScript to update the web page in this HTML object.
            When the property is set with a positive value the <see cref="P:HiQPdfClient.HtmlObjectBase.TriggerMode"/> property is automatically set to <see cref="F:HiQPdfClient.ConversionTriggerMode.WaitTime"/>.
            This property has effect only if the <see cref="P:HiQPdfClient.HtmlObjectBase.TriggerMode"/> property is <see cref="F:HiQPdfClient.ConversionTriggerMode.WaitTime"/>
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ManualTriggerWaitBeforeConvert">
            <summary>
            An additional time in seconds to wait before starting the conversion when the triggering mode is set to manual
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.HtmlLoadedTimeout">
            <summary>
            The maximum time in seconds to wait for HTML document to be loaded in this HTML object. The default value is 120 seconds.
            An exception is thrown if the HTML document cannot be loaded in HtmlLoadedTimeout seconds
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ForceNewPdfPages">
            <summary>
            Controls if a new PDF page is always created when the HTML object is laid out on the next PDF page. By default this property is false and if there is a next
            page already created in PDF document it will be used to layout this object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ConvertedHtmlElementSelector">
            <summary>
            This property can be set with a value representing the CSS selector of the HTML element to be converted in this HTML object.
            If many elements in the HTML document are selected, only the the first one will be converted. The values
            of the attributes in the CSS selectors are case sensitive. If this property is not set then the whole 
            HTML document is converted
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BrowserUserAgent">
            <summary>
            The browser custom user agent
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BrowserWidth">
            <summary>
            The browser window width in pixels in this HTML object. The default width is 1200 pixels
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BrowserHeight">
            <summary>
            The browser window height in pixels in this HTML object. The default height is set to render the entire HTML document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BrowserZoom">
            <summary>
            The browser window zoom percentage. The default zoom is 100
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.DefaultCharset">
            <summary>
            The default character set to be used when the character set meta tag is not set in HTML document header
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.MaxBrowserHeight">
            <summary>
            This property can be used to set a maximum limit in pixels for the rendered top part of a HTML document in this HTML object.
            The default value is 0 and the height is not limited
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.MinBrowserHeight">
            <summary>
            This property can be used to set a minimum height in pixels to be rendered in this HTML object. The default value is 0 pixels.
            This property is ignored when the <see cref="P:HiQPdfClient.HtmlObjectBase.BrowserHeight"/> property is set
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.StartBrowserHeight">
            <summary>
            This property can be used to set the starting height in pixels of the browser.
            This property is ignored when the <see cref="P:HiQPdfClient.HtmlConverterBase.BrowserHeight"/> property is set
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.MaxImageTileHeight">
            <summary>
            The maximum height in pixels of the image tiles captured by converter in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.TrimToBrowserWidth">
            <summary>
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlObjectBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is false
            then the browser window width will be automatically set to display the entire HTML document in this HTML object.
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlObjectBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is true
            then the browser window width will not be automatically set to display the entire HTML document and the HTML document
            will be trimmed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Authentication">
            <summary>
            The object exposed by this propery encapsulates a username and a password that can be used 
            to access web pages requiring HTTP authentication in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Impersonation">
            <summary>
            The object exposed by this propery encapsulates the properties controlling the internal browser impersonation in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Proxy">
            <summary>
            The object exposed by this property encapsulates the parameters (address, username, password) that can be used 
            to access web pages through a proxy server in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.HttpHeaders">
            <summary>
            A collection of the HTTP headers to be used when accessing a web page in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RepeatHttpHeaders">
            <summary>
            This property controls if the headers defined by the <see cref="P:HiQPdfClient.HtmlObjectBase.HttpHeaders"/> property are also used when accessing the resources referenced by the 
            web page, not only when accessing the web page in this HTML object. The default value is true and the headers are repeated when accessing the referenced resources
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.HttpCookies">
            <summary>
            A collection of HTTP cookies to be used when accessing a web page in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.HttpPostFields">
            <summary>
            A collection of HTTP POST fields to be used when accessing a web page in this HTML object.
            If the collection is not empty, the converter will make a POST request to the web page URL 
            with the fields from this collection.
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.MediaType">
            <summary>
            Controls the media type for which to render the HTML document in this HTML object. If this property is null or empty the default media type is 'screen'. 
            It can be set to a value like 'print' and in this case the CSS properties defined by the '@media print' rule will be used when the HTML is rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RenderSvgFonts">
            <summary>
            Controls if the SVG fonts are rendered in this HTML object. The default value is false when converting HTML to PDF or SVG and true when converting HTML to a raster image
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RenderWebFonts">
            <summary>
            Controls if the Web Fonts are rendered in this HTML object. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Http2Enabled">
            <summary>
            Controls if the HTTP2 protocol is enabled in NG version for this HTML object. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.LayoutWithHinting">
            <summary>
            Controls if the hinting is used to layout HTML in this HTML object. Layout hinting is disabled by default.
            Enabling this property can improve the layout but it can make the conversion slower
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.SelectedHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements for which to retrieve detailed information in 
            <see cref="P:HiQPdfClient.HtmlConversionInfo.SelectedHtmlElementsInfo"/> collection exposed by <see cref="P:HiQPdfClient.HtmlObjectBase.ConversionInfo"/>
            property in this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RetrieveExcludedElements">
            <summary>
            Controls if the HTML elements excluded from rendering can be selected for detailed information retrieval.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RunJavaScript">
            <summary>
            Controls if the JavaScript in the HTML document is executed in this HTML object. The default value of this property is true and the JavaScript is executed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RunExtensions">
            <summary>
            Controls if the browser extensions like Flash players are executed in this HTML object. The default value is false and no extension is executed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.StopSlowScripts">
            <summary>
            Controls if the browser should interrupt slow scripts in the web page in this HTML object. The default value is false and the scripts are not stopped
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ForceResourcesDownload">
            <summary>
            Controls if the HTML converter object should force all possible resources to be downloaded in this HTML object. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ProbeLayout">
            <summary>
            Controls if the HTML converter object should do a probe layout first in this HTML object. The default value is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Outlines">
            <summary>
            Controls the outlines automatically generated by this HTML object
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.FitDestWidth">
            <summary>
            Controls if the content is scaled down to fit the PDF destination width of this HTML object. This property is true by default.
            When this property is true the images and the text font can be smaller than in HTML
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.FitDestHeight">
            <summary>
            Controls if the content is scaled down to fit the PDF destination height iof this HTML object. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ForceFitDestWidth">
            <summary>
            Controls if the content can be enlarged to fit the PDF destination width of this HTML object when <see cref="P:HiQPdfClient.HtmlObjectBase.FitDestWidth"/> is true. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ConvertHttpLinks">
            <summary>
            Controls if the HTTP links in the HTML document are converted to HTTP links in PDF in this HTML object. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.LiveExcludedElements">
            <summary>
            Controls if the HTML elements excluded from rendering are live in PDF. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ConvertInternalLinks">
            <summary>
            Controls if the internal links in HTML are converted to internal links in PDF in this HTML object.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.ImagesCutAllowed">
            <summary>
            Controls if cutting images between PDF pages is permitted. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BreakInsideAvoidHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements not accepting page breaks inside them
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BreakBeforeHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break before them in PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.BreakAfterHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break after them in PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.Transform3DEnabled">
            <summary>
            Controls if the 3D transformations are enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.WebGLEnabled">
            <summary>
            Controls if the WebGL is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.AcceleratedCanvasEnabled">
            <summary>
            Controls if the accelerated canvas is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.LocalStorageEnabled">
            <summary>
            Controls if the local web storage is enabled. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.LocalFilesLoadEnabled">
            <summary>
            Controls if the local files can be loaded by converter. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RepeatHeaderInEvenPages">
            <summary>
            Controls if the header is repeated in even pages where this object is rendered. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RepeatHeaderInOddPages">
            <summary>
            Controls if the header is repeated in odd pages where this object is rendered. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RepeatFooterInEvenPages">
            <summary>
            Controls if the footer is repeated in even pages where this object is rendered. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlObjectBase.RepeatFooterInOddPages">
            <summary>
            Controls if the footer is repeated in odd pages where this object is rendered. This property is true by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.HtmlToImage">
            <summary>
            The HTML to Image converter class that can be  used to convert HTML documents to raster images
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.#ctor(System.String)">
            <summary>
            Creates a HTML to Image converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a HTML to Image converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.TrimToBrowserWidth">
            <summary>
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlObjectBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is false
            then the browser window width will be automatically set to display the entire HTML document in the resulted image.
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlObjectBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is true
            then the browser window width will not be automatically set to display the entire HTML document and the HTML document
            will be trimmed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.TransparentImage">
            <summary>
            Controls if the resulted image has a transparent background when converting a HTML document without background.
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.ImageTiling">
            <summary>
            Controls if the large images are tiled. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.SelectedHtmlElements">
            <summary>
            An array of HTML elements CSS selectors for which to retrieve detailed information in HtmlConversionInfo.SelectedHtmlElementsInfo collection. 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.HiddenHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements which will not be rendered in image
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.RenderPostScriptFonts">
            <summary>
            Controls if the PostScript fonts are rendered. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.ImagesCutAllowed">
            <summary>
            Controls if cutting images between PDF pages is permitted. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.BreakInsideAvoidHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements not accepting page breaks inside them
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.BreakBeforeHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break before them in PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToImage.BreakAfterHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break after them in PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertUrlToMemory(System.String,HiQPdfClient.ImageFormats)">
            <summary>
            Converts the HTML document from the given URL to an image in a given format
            </summary>
            <param name="url">The URL of the document to convert</param>
            <param name="format">The image format</param>
            <returns>The image data in given format</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertHtmlToMemory(System.String,System.String,HiQPdfClient.ImageFormats)">
            <summary>
            Converts a HTML code to an image in a given format using the base URL to resolve the external references found in HTML
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code
            It can be null if there are not relative URLs in the HTML code</param>
            <param name="format">The image format</param>
            <returns>The image data in the given format</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertUrlToFile(System.String,HiQPdfClient.ImageFormats,System.String)">
            <summary>
            Converts the HTML document from the given URL to an image file in a given format
            </summary>
            <param name="url">The URL of the document to convert</param>
            <param name="format">The image format</param>
            <param name="outImageFile">The full path of the output image file</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertHtmlToFile(System.String,System.String,HiQPdfClient.ImageFormats,System.String)">
            <summary>
            Converts a HTML string to an image file in a given format
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code
            It can be null if there are not relative URLs in the HTML code</param>
            <param name="format">The image format</param>
            <param name="outImageFile">The full path of the output image file</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertUrlToImageParts(System.String,HiQPdfClient.ImageFormats)">
            <summary>
            Converts the HTML document from the given URL to an image represented as an array of image parts 
            to avoid working with very large images in memory
            </summary>
            <param name="url">The URL of the document to convert</param>
            <param name="format">The image format</param>
            <returns>An array of image parts</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToImage.ConvertHtmlToImageParts(System.String,System.String,HiQPdfClient.ImageFormats)">
            <summary>
            Converts a HTML code to an image represented as an array of image parts 
            to avoid working with very large images in memory
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code
            It can be null if there are not relative URLs in the HTML code</param>
            <param name="format">The image format</param>
            <returns>An array of image parts</returns>
        </member>
        <member name="T:HiQPdfClient.HtmlToPdf">
            <summary>
            The HTML to PDF converter class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.#ctor(System.String)">
            <summary>
            Creates a HTML to PDF converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a HTML to PDF converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.Document">
            <summary>
            The properties of the object exposed by this property control the content and the aspect of the generated PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.ConversionInfo">
            <summary>
            This property is initialized after conversion with an object containing information about the converted HTML document,
            about the HTML elements in the HTML document and about the regions rendered in the PDF document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.TrimToBrowserWidth">
            <summary>
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlConverterBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is false
            then the browser window width will be automatically set to display the entire HTML document in the resulted PDF.
            If the HTML document cannot be entirely displayed in <see cref="P:HiQPdfClient.HtmlConverterBase.BrowserWidth"/> pixels and the TrimToBrowserWidth is true
            then the browser window width will not be automatically set to display the entire HTML document and the HTML document
            will be trimmed
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.RenderPostScriptFonts">
            <summary>
            Controls if the PostScript fonts are rendered. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.SelectedHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements for which to retrieve detailed information in 
            <see cref="P:HiQPdfClient.HtmlConversionInfo.SelectedHtmlElementsInfo"/> collection exposed by <see cref="P:HiQPdfClient.HtmlToPdf.ConversionInfo"/> 
            property
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.RetrieveExcludedElements">
            <summary>
            Controls if the HTML elements excluded from rendering can be selected for detailed information retrieval.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToPdf.HiddenHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements which will not be rendered to PDF
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertUrlToMemory(System.String)">
            <summary>
             Converts a HTML document from a given URL and produces a PDF document in a memory buffer
            </summary>
            <param name="url">The URL of the HTML document to convert</param>
            <returns>The PDF document as a memory buffer</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertHtmlToMemory(System.String,System.String)">
            <summary>
             Converts a HTML code and produces a PDF document in a memory buffer
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
            <returns>The PDF document as memory buffer</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertUrlToPdfDocument(System.String)">
            <summary>
            Converts a HTML document from a given URL and produces a <see cref="T:HiQPdfClient.PdfDocument"/> object that can be further modified and then saved
            </summary>
            <param name="url">The URL of the HTML document to convert</param>
            <returns>The <see cref="T:HiQPdfClient.PdfDocument"/> object containing the conversion result</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertHtmlToPdfDocument(System.String,System.String)">
            <summary>
            Converts a HTML code and produces a <see cref="T:HiQPdfClient.PdfDocument"/> object that can be further modified and then saved
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
            <returns>The <see cref="T:HiQPdfClient.PdfDocument"/> object containing the conversion result</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertUrlToFile(System.String,System.String)">
            <summary>
            Converts a HTML document from a given URL to a PDF file
            </summary>
            <param name="url">The URL of the HTML document to convert</param>
            <param name="outputFile">The output PDF file</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToPdf.ConvertHtmlToFile(System.String,System.String,System.String)">
            <summary>
            Converts a HTML code to a PDF file
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
            <param name="outputFile">The output PDF file</param>
        </member>
        <member name="T:HiQPdfClient.HtmlToSvg">
            <summary>
            The HTML to SVG converter class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.#ctor(System.String)">
            <summary>
            Creates a HTML to SVG converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a HTML to SVG converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.HtmlToSvg.DPI">
            <summary>
            Set the SVG document DPI 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HtmlToSvg.SetSize">
            <summary>
            Controls if the calculated size of the document is set in document
            </summary>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.ConvertUrlToMemory(System.String)">
            <summary>
            Converts a HTML document from a given URL and produces a SVG document in a memory buffer
            </summary>
            <param name="url">The URL of the HTML document to convert</param>
            <returns>The SVG document as a memory buffer</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.ConvertHtmlToMemory(System.String,System.String)">
            <summary>
            Converts a HTML code and produces a SVG document in a memory buffer
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
            <returns>The SVG document as a memory buffer</returns>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.ConvertUrlToFile(System.String,System.String)">
            <summary>
            Converts a HTML document from a given URL to a SVG file
            </summary>
            <param name="url">The URL of the HTML document to convert</param>
            <param name="outputFile">The output SVG file</param>
        </member>
        <member name="M:HiQPdfClient.HtmlToSvg.ConvertHtmlToFile(System.String,System.String,System.String)">
            <summary>
            Converts a HTML code to a SVG file using the base URL to resolve the external references found in HTML
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
            <param name="outputFile">The output SVG file</param>
        </member>
        <member name="T:HiQPdfClient.HttpAuthentication">
            <summary>
            Encapsulates a username and a password to resolve various types of HTTP authentication 
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpAuthentication.Username">
            <summary>
            The username used in authentication process
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpAuthentication.Password">
            <summary>
            The password used in authentication process
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpAuthentication.UseCurrentUserCredentials">
            <summary>
            When this property is true the converter will send the current user credentials to resolve the NTLM authentication. 
            If <see cref="P:HiQPdfClient.HttpAuthentication.Username"/> was set with a value this property is ignored. The default property value is true
            </summary>
        </member>
        <member name="T:HiQPdfClient.HttpPostField">
            <summary>
            The HTTP POST field class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpPostField.#ctor">
            <summary>
            Constructs an empty HTTP POST field
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpPostField.#ctor(System.String,System.String)">
            <summary>
            Constructs a HTTP POST field with the given name and value
            </summary>
            <param name="postFieldName">The POST field name</param>
            <param name="postFieldValue">The POST field value</param>
        </member>
        <member name="P:HiQPdfClient.HttpPostField.Name">
            <summary>
            The HTTP POST field name
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpPostField.Value">
            <summary>
            The HTTP POST field value
            </summary>
        </member>
        <member name="T:HiQPdfClient.HttpRequestCookie">
            <summary>
            The HTTP cookie class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpRequestCookie.#ctor">
            <summary>
            Constructs and empty HTTP cookie
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpRequestCookie.#ctor(System.String,System.String)">
            <summary>
            Constructs a HTTP cookie with the given name and value
            </summary>
            <param name="cookieName">The cookie name</param>
            <param name="cookieValue">The cookie value</param>
        </member>
        <member name="P:HiQPdfClient.HttpRequestCookie.Name">
            <summary>
            The cookie name
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpRequestCookie.Value">
            <summary>
            The cookie value
            </summary>
        </member>
        <member name="T:HiQPdfClient.HttpRequestHeader">
            <summary>
            The HTTP header class
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpRequestHeader.#ctor">
            <summary>
            Constructs an empty HTTP header
            </summary>
        </member>
        <member name="M:HiQPdfClient.HttpRequestHeader.#ctor(System.String,System.String)">
            <summary>
            Constructs a HTTP header with the given name and value
            </summary>
            <param name="headerName">The header name</param>
            <param name="headerValue">The header value</param>
        </member>
        <member name="P:HiQPdfClient.HttpRequestHeader.Name">
            <summary>
            The header name
            </summary>
        </member>
        <member name="P:HiQPdfClient.HttpRequestHeader.Value">
            <summary>
            The header value
            </summary>
        </member>
        <member name="T:HiQPdfClient.ImageFormats">
            <summary>
            The image formats
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.None">
            <summary>
            No format
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Bmp">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Gif">
            <summary>
            GIF
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Icon">
            <summary>
            Icon
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Jpeg">
            <summary>
            JPEG
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Png">
            <summary>
            PNG
            </summary>
        </member>
        <member name="F:HiQPdfClient.ImageFormats.Tiff">
            <summary>
            TIFF
            </summary>
        </member>
        <member name="T:HiQPdfClient.KeyValue">
            <summary>
            Represents a key value pair
            </summary>
        </member>
        <member name="M:HiQPdfClient.KeyValue.#ctor(System.String,System.String)">
            <summary>
            Constructs a key value pair
            </summary>
            <param name="key">The pair key</param>
            <param name="value">The pair value</param>
        </member>
        <member name="P:HiQPdfClient.KeyValue.Key">
            <summary>
            Gets or sets the pair key
            </summary>
        </member>
        <member name="P:HiQPdfClient.KeyValue.Value">
            <summary>
            Gets or sets the pair value
            </summary>
        </member>
        <member name="T:HiQPdfClient.KeyValueCollection">
            <summary>
            Represents a collection of <see cref="T:HiQPdfClient.KeyValue"/> objects
            </summary>
        </member>
        <member name="M:HiQPdfClient.KeyValueCollection.Add(System.String,System.String)">
            <summary>
            Adds a key value pair to collection
            </summary>
            <param name="key">The pair key</param>
            <param name="value">The pair value</param>
            <returns>The added pair</returns>
        </member>
        <member name="P:HiQPdfClient.KeyValueCollection.Count">
            <summary>
            Gets the number of pairs in collection
            </summary>
        </member>
        <member name="M:HiQPdfClient.KeyValueCollection.GetByIndex(System.Int32)">
            <summary>
            Retrieves the key value pair at the given index in collection
            </summary>
            <param name="index">The key value pair index</param>
            <returns>The key value pair at the given index in collection</returns>
        </member>
        <member name="M:HiQPdfClient.KeyValueCollection.GetByKey(System.String)">
            <summary>
            Retrieves the key value pair having a given key
            </summary>
            <param name="key">The pair key</param>
            <returns>The key value pair with the given key or null if the key ws not found</returns>
        </member>
        <member name="T:HiQPdfClient.NetworkProxy">
            <summary>
            The network proxy class  
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.Host">
            <summary>
            The proxy host name. This property is empty by  default
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.Port">
            <summary>
            The proxy port. This property is 0 by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.Protocol">
            <summary>
            The proxy protocol. A proxy is not used by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.Username">
            <summary>
            The proxy username. This property is empty by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.Password">
            <summary>
            The proxy password. This property is empty by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.NetworkProxy.ExcludedHosts">
            <summary>
            The hosts to be excluded from proxy access
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfActionBase">
            <summary>
            Generic base class for PDF actions
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfAnchoringMode">
            <summary>
            The anchoring mode in a PDF page
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.None">
            <summary>
            Not anchored
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.Centered">
            <summary>
            Centered
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.TopLeft">
            <summary>
            Anchor in the top left corner
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.TopRight">
            <summary>
            Anchor in the top right corner
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.BottomLeft">
            <summary>
            Anchor in the bottom left corner
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAnchoringMode.BottomRight">
            <summary>
            Anchor in the bottom right corner
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfAttachIconType">
            <summary>
            The PDF file attachment icon type
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAttachIconType.PushPin">
            <summary>
            PushPin icon
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfAttachIconType.Paperclip">
            <summary>
            Paperclip icon
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfAttachment">
            <summary>
            The PDF attachment class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfAttachment.#ctor(HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Creates an attachment in PDF document from the given file
            </summary>
            <param name="iconRectangle">The bounding rectangle of the attachment icon</param>
            <param name="file">The full path of the file to attach</param>
        </member>
        <member name="M:HiQPdfClient.PdfAttachment.#ctor(HiQPdfClient.RectangleFloat,System.Byte[],System.String)">
            <summary>
            Creates an attachment in PDF document from the given data
            </summary>
            <param name="iconRectangle">The bounding rectangle of the attachment icon</param>
            <param name="data">The data to embed in PDF</param>
            <param name="name">The name of the attachment</param>
        </member>
        <member name="P:HiQPdfClient.PdfAttachment.IconType">
            <summary>
            The file attachment icon type in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAttachment.IconRectangle">
            <summary>
            The file attachment icon rectangle in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAttachment.IconColor">
            <summary>
            The file attachment icon color in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAttachment.Description">
            <summary>
            The file attachment description
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfAutoOutlines">
            <summary>
            Controls the creation of automatic outlines
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.OutlineHeadingTags">
            <summary>
            Controls if the heading tags H1, H2, H3, H4, H5, H6 are automatically outlined in PDF. This property is false by default 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.HierarchicalOutlines">
            <summary>
            Controls if the automatically generated outlines are in a multilevel hierarchy. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.OutlinedElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements to be outlined
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.MaxTextChars">
            <summary>
            The maximum number of characters of the outline title. By default there is no limit
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.OutlineEmptyText">
            <summary>
            Controls if the HTML elements without title can be outlined. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfAutoOutlines.DefaultOutlineText">
            <summary>
            The default outline title for the HTML elements without title
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfBezierCurve">
            <summary>
            The PDF Bezier curve class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfBezierCurve.#ctor(HiQPdfClient.PointFloat,HiQPdfClient.PointFloat,HiQPdfClient.PointFloat,HiQPdfClient.PointFloat)">
            <summary>
            Constructs a bezier curve based on 4 points
            </summary>
            <param name="p1">Point 1</param>
            <param name="p2">Point 2</param>
            <param name="p3">Point 3</param>
            <param name="p4">Point 4</param>
        </member>
        <member name="P:HiQPdfClient.PdfBezierCurve.P1">
            <summary>
            This property represents the Point 1 of the bezier curve
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfBezierCurve.P2">
            <summary>
            This property represents the Point 2 of the bezier curve
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfBezierCurve.P3">
            <summary>
            This property represents the Point 3 of the bezier curve
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfBezierCurve.P4">
            <summary>
            This property represents the Point 4 of the bezier curve
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfBlendingMode">
            <summary>
            The standard blending types in PDF
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Normal">
            <summary>
            Normal blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Multiply">
            <summary>
            Multiply blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Screen">
            <summary>
            Screen blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Overlay">
            <summary>
            Overlay blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Darken">
            <summary>
            Darken blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Lighten">
            <summary>
            Lighten blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Dodge">
            <summary>
            Dodge blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Burn">
            <summary>
            Burn blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.HardLight">
            <summary>
            HardLight blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.SoftLight">
            <summary>
            SoftLight blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Difference">
            <summary>
            Difference blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Exclusion">
            <summary>
            Exclusion blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Hue">
            <summary>
            Hue blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Saturation">
            <summary>
            Saturation blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Color">
            <summary>
            Color blending
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBlendingMode.Luminosity">
            <summary>
            Luminosity blending
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfBorderStyle">
            <summary>
            The border styles that can be used in a PDF document
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBorderStyle.Default">
            <summary>
            Default border
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBorderStyle.NoBorder">
            <summary>
            No border
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBorderStyle.FixedSingle">
            <summary>
            Single border
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfBorderStyle.Fixed3D">
            <summary>
            3D border
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfCanvas">
            <summary>
            A generic container for PDF objects
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfCanvas.ParentDocument">
            <summary>
            The parent document of this canvas
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfCanvas.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Layout a PDF object in container
            </summary>
            <param name="pdfObject">The PDF object to be laid out in container</param>
            <returns>The layout information after the PDF object was laid out in container</returns>
        </member>
        <member name="T:HiQPdfClient.PdfCircle">
            <summary>
            The PDF circle class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfCircle.#ctor(HiQPdfClient.PointFloat,System.Single)">
            <summary>
            Constructs a circle with the given center point and radius
            </summary>
            <param name="center">The circle center point</param>
            <param name="radius">The circle radius</param>
        </member>
        <member name="P:HiQPdfClient.PdfCircle.Radius">
            <summary>
            The circle radius
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfColor">
            <summary>
            The PDF color class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructs a PDF color with the given RGB components as integer values between 0 and 255
            </summary>
            <param name="red">Red component</param>
            <param name="green">Green component</param>
            <param name="blue">Blue component</param>
        </member>
        <member name="P:HiQPdfClient.PdfColor.R">
            <summary>
            The red component of the color in RGB color model
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.G">
            <summary>
            The green component of the color in RGB color model
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.B">
            <summary>
            The blue component of the color in RGB color model
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Red">
            <summary>
            The Red color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Green">
            <summary>
            The Green color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Blue">
            <summary>
            The Blue color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.White">
            <summary>
            The White color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Black">
            <summary>
            The Black color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Yellow">
            <summary>
            The Yellow color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Orange">
            <summary>
            The Orange color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Indigo">
            <summary>
            The Indigo color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Violet">
            <summary>
            The Violet color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Pink">
            <summary>
            The Pink color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Purple">
            <summary>
            The Purple color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Gray">
            <summary>
            The Gray color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.AliceBlue">
            <summary>
            The Alice Blue color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Navy">
            <summary>
            The Navy color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.WhiteSmoke">
            <summary>
            The White Smoke color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Beige">
            <summary>
            The Beige color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.MistyRose">
            <summary>
            The Misty Rose color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.AntiqueWhite">
            <summary>
            The Antique White color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.LightCyan">
            <summary>
            The Light Cyan color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Coral">
            <summary>
            The Coral color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.LightGreen">
            <summary>
            The Light Green color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.DarkGreen">
            <summary>
            The Dark Green color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.LightGray">
            <summary>
            The Light Gray color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.LightBlue">
            <summary>
            The Light Blue color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.LightSalmon">
            <summary>
            The Light Salmon color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.OrangeRed">
            <summary>
            The Orange Red color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfColor.Empty">
            <summary>
            The empty color
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfColorProfile">
            <summary>
            The possible color profiles of a PDF document generated by library
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfColorProfile.Default">
            <summary>
            Default color profile
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfColorProfile.Custom">
            <summary>
            Custom color profile
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfColorSpace">
            <summary>
            The color spaces that a PDF document can have
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfColorSpace.Rgb">
            <summary>
            RGB
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfColorSpace.Cmyk">
            <summary>
            CMYK
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfColorSpace.GrayScale">
            <summary>
            Gray scale
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDestination">
            <summary>
            The destination of outlines, internal links and GoTo actions in the PDF document 
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDestination.#ctor(HiQPdfClient.PdfPage)">
            <summary>
            Creates a destination for the top left corner of the given PDF page
            </summary>
            <param name="page">The target page</param>
        </member>
        <member name="M:HiQPdfClient.PdfDestination.#ctor(HiQPdfClient.PdfPage,HiQPdfClient.PointFloat)">
            <summary>
            Creates a destination for the given point in the given PDF page
            </summary>
            <param name="page">The target page</param>
            <param name="point">The target point in page</param>
        </member>
        <member name="M:HiQPdfClient.PdfDestination.#ctor(HiQPdfClient.PdfPage,HiQPdfClient.PointFloat,HiQPdfClient.PdfDestinationViewMode)">
            <summary>
            Creates a destination for the given point in the given PDF page having the given view mode
            </summary>
            <param name="page">The target page</param>
            <param name="point">The target point in page</param>
            <param name="viewMode">The destination view mode</param>
        </member>
        <member name="P:HiQPdfClient.PdfDestination.Point">
            <summary>
            The target point in the target page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDestination.Zoom">
            <summary>
            The zoom percentage of the target page in a PDF viewer
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDestination.Page">
            <summary>
            The target PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDestination.ViewMode">
            <summary>
            The view mode of the target page
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDestinationViewMode">
            <summary>
            The view mode of a PDF destination
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.XYZ">
            <summary>
            XYZ
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.Fit">
            <summary>
            Fit
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.FitH">
            <summary>
            FitH
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.FitV">
            <summary>
            FitV
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.FitB">
            <summary>
            FitB
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.FitBH">
            <summary>
            FitBH
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDestinationViewMode.FitBV">
            <summary>
            FitBV
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDigitalSignature">
            <summary>
            The digital signature class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDigitalSignature.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a digital signature object from a PFX file to be applied in PDF document over the last rendered object
            </summary>
            <param name="pfxFile">The PFX file containing the certificate</param>
            <param name="password">The PFX file password which can be null or empty if there is no password protection</param>
            <param name="certIndex">The certificate index in PFX file. The default value is 0</param>
        </member>
        <member name="M:HiQPdfClient.PdfDigitalSignature.#ctor(HiQPdfClient.RectangleFloat,System.String,System.String,System.Int32)">
            <summary>
            Creates a digital signature object from a PFX file to be applied at a given location in PDF page
            </summary>
            <param name="bounds">The bounds of the certificate in PDF page</param>
            <param name="pfxFile">The PFX file containing the certificate</param>
            <param name="password">The PFX file password which can be null or empty if there is no password protection</param>
            <param name="certIndex">The certificate index in PFX file. The default value is 0</param>
        </member>
        <member name="M:HiQPdfClient.PdfDigitalSignature.#ctor(System.Byte[],System.String,System.Int32)">
            <summary>
            Creates a digital signature object from PFX file data to be applied in PDF document over the last rendered object 
            </summary>
            <param name="pfxFileData">The data from a PFX file containing the certificate</param>
            <param name="password">The PFX file password which can be null or empty if there is no password protection</param>
            <param name="certIndex">The certificate index in PFX file. The default value is 0</param>
        </member>
        <member name="M:HiQPdfClient.PdfDigitalSignature.#ctor(HiQPdfClient.RectangleFloat,System.Byte[],System.String,System.Int32)">
            <summary>
            Creates a digital signature object from a PFX file data to be applied at a given location in PDF page
            </summary>
            <param name="bounds">The bounds of the certificate in PDF page</param>
            <param name="pfxFileData">The data from a PFX file containing the certificate</param>
            <param name="password">The PFX file password which can be null or empty if there is no password protection</param>
            <param name="certIndex">The certificate index in PFX file. The default value is 0</param>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.PfxFileData">
            <summary>
            The PFX file data containing the certificate
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.Bounds">
            <summary>
            The bounds of the certificate in PDF page. If bounds are null the signature is applied in PDF page after the last rendered object 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.PfxFilePassword">
            <summary>
            The PFX file password which can be null or empty if there is no password protection
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.CertIndex">
            <summary>
            The certificate index in PFX file
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.SigningReason">
            <summary>
            The reason for signing
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.SigningLocation">
            <summary>
            The location of signing
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDigitalSignature.SignerContactInfo">
            <summary>
            The signer contact info
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDockingMode">
            <summary>
            The docking mode in a PDF page
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.None">
            <summary>
            Not docked
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.TopEdge">
            <summary>
            Docket at the top
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.BottomEdge">
            <summary>
            Docket at the bottom
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.LeftEdge">
            <summary>
            Repeat at the left of the PDF page
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.RightEdge">
            <summary>
            Docket at the right of the PDF page
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfDockingMode.Fill">
            <summary>
            Fill the PDF page
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDocTableOfContents">
            <summary>
            Controls the automatic creation of the table of contents in a PDF document 
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocTableOfContents.InsertPdfFileBefore(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to insert a PDF file before the table of contents in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfFile">The fully qualified path of the PDF file to insert</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocTableOfContents.InsertPdfFileBefore(System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to insert a PDF document from data before the table of contents in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocTableOfContents.NewSectionForEachHtml">
            <summary>
            Controls if a new section is started in the table of contents for each HTML document added to this PDF document.
            This property is true by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDocument">
            <summary>
            The PDF document class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String)">
            <summary>
            Constructs an empty PDF document using the default server port
            </summary>
            <param name="server">The server IP or name</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32)">
            <summary>
            Constructs an empty PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,HiQPdfClient.PdfStandard)">
            <summary>
            Constructs an empty PDF document with a standard
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="standard">The PDF document standard</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,HiQPdfClient.PdfColorSpace)">
            <summary>
            Constructs an empty PDF document with a color space
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="colorSpace">The PDF document color space</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,HiQPdfClient.PdfColorProfile)">
            <summary>
            Constructs an empty PDF document with a color profile
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="colorProfile">The PDF document color profile</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,HiQPdfClient.PdfStandard,HiQPdfClient.PdfColorSpace,HiQPdfClient.PdfColorProfile)">
            <summary>
            Constructs an empty PDF document with a standard, color space and color profile
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="standard">The PDF document standard</param>
            <param name="colorSpace">The PDF document color space</param>
            <param name="colorProfile">The PDF document color profile</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.String,HiQPdfClient.PdfStandard,HiQPdfClient.PdfColorSpace,HiQPdfClient.PdfColorProfile)">
            <summary>
            Constructs an empty PDF document with a standard, color space and color profile using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="standard">The PDF document standard</param>
            <param name="colorSpace">The PDF document color space</param>
            <param name="colorProfile">The PDF document color profile</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.String)">
            <summary>
            Constructs a PDF document from a file using the default server port
            </summary>
            <param name="server">The server IP or name</param>
            <param name="pdfFilePath">The PDF file full path</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.String)">
            <summary>
            Constructs a PDF document from a file
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfFilePath">The PDF file full path</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.String,System.String)">
            <summary>
            Constructs a PDF document from a password protected file
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfFilePath">The PDF file full path</param>
            <param name="password">The PDF document password</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.String,System.String,System.String)">
            <summary>
            Constructs a PDF document from a password protected file using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="pdfFilePath">The PDF file full path</param>
            <param name="password">The PDF document password</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.Byte[])">
            <summary>
            Constructs a PDF document from data using the default server port
            </summary>
            <param name="server">The server IP or name</param>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.Byte[])">
            <summary>
            Constructs a PDF document from data
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.Byte[],System.String)">
            <summary>
            Constructs a PDF document from data of a password protected PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The PDF document password</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.#ctor(System.String,System.UInt32,System.String,System.Byte[],System.String)">
            <summary>
            Constructs a PDF document from data of a password protected PDF document using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The PDF document password</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Server">
            <summary>
            The server IP or name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.ServerPassword">
            <summary>
            The password to access the server if the server is password protected
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromStream(System.String,System.IO.Stream)">
            <summary>
            Loads a PDF document from a stream and returns the created PDF document using the default server port
            </summary>
            <param name="server">The server IP or name</param>
            <param name="stream">The stream from where to load the PDF document</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromStream(System.String,System.UInt32,System.IO.Stream)">
            <summary>
            Loads a PDF document from a stream and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="stream">The stream from where to load the PDF document</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromStream(System.String,System.UInt32,System.IO.Stream,System.String)">
            <summary>
            Loads a password protected PDF document from a stream and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="stream">The stream from where to load the PDF document</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromStream(System.String,System.UInt32,System.String,System.IO.Stream,System.String)">
            <summary>
            Loads a password protected PDF document from a stream and returns the created PDF document using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="stream">The stream from where to load the PDF document</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromFile(System.String,System.String)">
            <summary>
            Loads a PDF document from a file and returns the created PDF document using the default server port
            </summary>
            <param name="server">The server IP or name</param>
            <param name="file">The file from where to load the PDF document</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromFile(System.String,System.UInt32,System.String)">
            <summary>
            Loads a PDF document from a file and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="file">The file from where to load the PDF document</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromFile(System.String,System.UInt32,System.String,System.String)">
            <summary>
            Loads a password protected PDF document from a file and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="file">The file from where to load the PDF document</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromFile(System.String,System.UInt32,System.String,System.String,System.String)">
            <summary>
            Loads a password protected PDF document from a file and returns the created PDF document using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="file">The file from where to load the PDF document</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromData(System.String,System.Byte[])">
            <summary>
            Loads a PDF document from data and returns the created PDF document using the default server port
            </summary>
            <param name="server">The server IP or name</param>
            <param name="pdfData">The PDF document data</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromData(System.String,System.UInt32,System.Byte[])">
            <summary>
            Loads a PDF document from data and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfData">The PDF document data</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromData(System.String,System.UInt32,System.Byte[],System.String)">
            <summary>
            Loads a password protected PDF document from data and returns the created PDF document
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.FromData(System.String,System.UInt32,System.String,System.Byte[],System.String)">
            <summary>
            Loads a password protected PDF document from data and returns the created PDF document using a server password
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="serverPassword">The server password</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The PDF document password</param>
            <returns>The loaded PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateStandardPdf(System.String,System.UInt32,HiQPdfClient.PdfStandard)">
            <summary>
            Creates a PDF document with a given PDF standard
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="standard">The PDF document standard</param>
            <returns>The created PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateColorSpacePdf(System.String,System.UInt32,HiQPdfClient.PdfColorSpace)">
            <summary>
            Creates a PDF document with a given color space
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="colorSpace">The document color space</param>
            <returns>The created PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateColorProfilePdf(System.String,System.UInt32,HiQPdfClient.PdfColorProfile)">
            <summary>
            Creates a PDF document with a given color profile
            </summary>
            <param name="server">The server IP or name</param>
            <param name="port">The server port number</param>
            <param name="colorProfile">The document color profile</param>
            <returns>The created PDF document</returns>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.SerialNumber">
            <summary>
            The serial number obtained after product purchase. Must be set before writing the document.
            If it is not set the library will work in evaluation mode
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.WriteToFile(System.String)">
            <summary>
            Writes this PDF document to the output file given by the parameter
            </summary>
            <param name="outputFile">The output file</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.WriteToStream(System.IO.Stream)">
            <summary>
            Writes the PDF document to the given output stream
            </summary>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.WriteToMemory">
            <summary>
            Writes the PDF document in a memory buffer and return the memory buffer
            </summary>
            <returns>The PDF document as a memory buffer</returns>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Margins">
            <summary>
            The PDF document margins
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Header">
            <summary>
            The PDF document header
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Footer">
            <summary>
            The PDF document footer
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateFontFromName(System.String,System.Single,System.Boolean)">
            <summary>
            Creates a PDF font based on a font family name with given size and embedding option
            </summary>
            <param name="familyName">Font family name</param>
            <param name="fontSize">Font size in points</param>
            <param name="embedFont">Embed font in PDF</param>
            <returns>The PDF font</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateStandardFont(HiQPdfClient.PdfStandardFont,System.Single)">
            <summary>
            Creates a PDF font from the given standard Type 1 font with given size
            </summary>
            <param name="font">The standard Type 1 font</param>
            <param name="fontSize">The font size in points</param>
            <returns>The PDF font</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateFontFromData(System.Byte[],System.Single)">
            <summary>
            Creates a system font from font data with given size
            </summary>
            <param name="fontData">The font data</param>
            <param name="fontSize">The font size in points</param>
            <returns>The PDF font</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateHeaderCanvas(System.Single)">
            <summary>
            Creates a header canvas and assigns it to <see cref="P:HiQPdfClient.PdfDocument.Header"/> property of the document. The width
            of the header is given by the first page of the document
            </summary>
            <param name="height">The header height</param>
            <returns>The document header canvas</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateFooterCanvas(System.Single)">
            <summary>
            Creates a footer canvas and assigns it to <see cref="P:HiQPdfClient.PdfDocument.Footer"/> property of the document. The width
            of the footer is given by the first page of the document
            </summary>
            <param name="height">The footer height</param>
            <returns>The document footer canvas</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateRepeatedCanvas(HiQPdfClient.RectangleFloat)">
            <summary>
            Creates a canvas to be repeated on each PDF page in the given bounding box
            </summary>
            <param name="bounds">The canvas bounding box in PDF page</param>
            <returns>The created canvas</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.IndexOfPage(HiQPdfClient.PdfPage)">
            <summary>
            Retrieves the index of a PDF page in pages collection
            </summary>
            <param name="pdfPage">The PDF page to search</param>
            <returns>The PDF page index in pages collection. Returns a negative value if the page does not exist in collection</returns>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.PageCount">
            <summary>
            The number of document pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Pages">
            <summary>
            The list of document pages
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.GetPage(System.Int32)">
            <summary>
            Retrieves the PDF page at the given index
            </summary>
            <param name="index">The index of the PDF page to retrieve</param>
            <returns>The PDF page at the given index or null if the index is invalid</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPage">
            <summary>
            Adds a new page with the default size, orientation and margins to the end of this document
            </summary>
            <returns>The added page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPage(HiQPdfClient.PdfMargins)">
            <summary>
            Adds a new page with the default size and orientation and the given margins to the end of this document
            </summary>
            <param name="margins">The page margins</param>
            <returns>The added page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPage(HiQPdfClient.PdfPageSize,HiQPdfClient.PdfMargins)">
            <summary>
            Adds a new page with the default orientation and the given size and margins to end of this document
            </summary>
            <param name="size">The page size in points</param>
            <param name="margins">The page margins</param>
            <returns>The added page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPage(HiQPdfClient.PdfPageSize,HiQPdfClient.PdfMargins,HiQPdfClient.PdfPageOrientation)">
            <summary>
            Adds a new page with the given size, margins and orientation at the end of this document
            </summary>
            <param name="size">The page size in points</param>
            <param name="margins">The page margins</param>
            <param name="orientation">The page orientation</param>
            <returns>The added page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPage(HiQPdfClient.PdfPageSize,HiQPdfClient.PdfMargins,HiQPdfClient.PdfPageOrientation,HiQPdfClient.PdfPageRotation)">
            <summary>
            Adds a new page with the given size, margins, orientation and rotation at the end of this document
            </summary>
            <param name="size">The page size in points</param>
            <param name="margins">The page margins</param>
            <param name="orientation">The page orientation</param>
            <param name="rotation">The page rotation</param>
            <returns>The added page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddPageAtIndex(System.Int32,HiQPdfClient.PdfPageSize,HiQPdfClient.PdfMargins,HiQPdfClient.PdfPageOrientation,HiQPdfClient.PdfPageRotation)">
            <summary>
            Adds a new page with the given size, margins, orientation and rotation at the given index. The first page index is 0
            </summary>
            <param name="index">The index of the new page</param>
            <param name="size">The page size in points</param>
            <param name="margins">The page margins</param>
            <param name="orientation">The page orientation</param>
            <param name="rotation">The page rotation</param>
            <returns>The newly created PDF page</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.String)">
            <summary>
            Adds a PDF file to the end of this document
            </summary>
            <param name="pdfFile">The full path of the PDF file to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.String,System.String)">
            <summary>
            Adds a password protected PDF file to the end of this document
            </summary>
            <param name="pdfFile">The full path of the PDF file to add</param>
            <param name="password">The password of added PDF document </param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a PDF file to the end of this document and optionally applies the header and footer of this document to added PDF
            </summary>
            <param name="pdfFile">The full path of the PDF file to add</param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the added document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a password protected PDF file to the end of this document and optionally applies the header and footer of this document to added PDF
            </summary>
            <param name="pdfFile">The full path of the PDF file to add</param>
            <param name="password">The password of added PDF document </param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the added document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>        
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.String)">
            <summary>
            Inserts a PDF file starting at a given page index in this document
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfFile">The full path of the PDF file to insert</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.String,System.String)">
            <summary>
            Inserts a password protected PDF file starting at a given page index in this document
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfFile">The full path of the PDF file to insert</param>
            <param name="password">The password of inserted PDF document </param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a PDF file starting at a given page index in this document and optionally applies the header and footer of this document to inserted PDF
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfFile">The full path of the PDF file to insert</param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the inserted document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the inserted document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the inserted document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a password protected PDF file starting at a given page index in this document and optionally 
            applies the header and footer of this document to inserted PDF
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfFile">The full path of the PDF file to insert</param>
            <param name="password">The password of inserted PDF document </param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the inserted document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the inserted document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the inserted document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Byte[])">
            <summary>
            Adds a PDF from data to the end of this document
            </summary>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Byte[],System.String)">
            <summary>
            Adds a password protected PDF from data to the end of this document
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The password of added PDF document </param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a PDF from data to the end of this document and optionally applies the header and footer of this document to added PDF
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the added document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Byte[],System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a password protected PDF from data to the end of this document and optionally applies the header and footer of this document to added PDF
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The password of added PDF document </param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the added document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.Byte[])">
            <summary>
            Inserts a PDF from data starting at a given page index in this document
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.Byte[],System.String)">
            <summary>
            Inserts a password protected PDF from data starting at a given page index in this document
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The password of inserted PDF document </param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a PDF from data starting at a given page index in this document and optionally applies the header and footer of this document to inserted PDF
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfData">The PDF document data</param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the inserted document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the inserted document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the inserted document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDocument(System.Int32,System.Byte[],System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Inserts a password protected PDF from data starting at a given page index in this document and optionally 
            applies the header and footer of this document to inserted PDF
            </summary>
            <param name="startIndex">The page index where to insert the document</param>
            <param name="pdfData">The PDF document data</param>
            <param name="password">The password of inserted PDF document </param>
            <param name="applyHeaderAndFooter">Controls is the header and footer of this document are applied to the inserted document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the inserted document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the inserted document</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Form">
            <summary>
            The PDF form of this PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddFormField(HiQPdfClient.PdfFormField)">
            <summary>
             Adds a form field after the last PDF object rendered
            </summary>
            <param name="formField">The form field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddFormField(HiQPdfClient.PdfFormField,System.Single)">
            <summary>
            Adds a form field at the given vertical offset after the last PDF object rendered
            </summary>
            <param name="formField">The form field to add</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddFormField(HiQPdfClient.PdfFormField,System.Single,System.Single)">
            <summary>
            Adds a form field at the given horizontal and vertical offset after the last PDF object rendered
            </summary>
            <param name="formField">The form field to add</param>
            <param name="dx">The horizontal offset after the last PDF object rendered</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddFormField(HiQPdfClient.PdfFormField,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Adds a form field at a given X and Y position in PDF page where the last object was rendered.
            The position can be absolute in PDF page or relative to last object rendered
            </summary>
            <param name="formField">The form field to be added</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left X coordinate of the last object rendered.
            If this value is false the X position is absolute in PDF page</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom Y coordinate of the last object rendered.
            If this value is false the Y position is absolute in PDF page</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddFormField(HiQPdfClient.PdfFormField,System.Single,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Adds a form field to this document at the given X and Y location in the PDF page where the last element rendering ended.
            The location can be absolute in PDF page or relative as an offset from the position where the last element rendering ended.
            </summary>
            <param name="formField">The form field to be added</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left or right X coordinate of the last object rendered,
            function of the next parameter value. If this value is false the X position is absolute in PDF page</param>
            <param name="xRelToLeft">If this value is true the X position is relative to left X coordinate of the last object rendered.
            If this value is false the X position is relative to right X coordinate of the last object rendered</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom or top Y coordinate of the last object rendered,
            function of the next parameter value. If this value is false the Y position is absolute in PDF page</param>
            <param name="yRelToBottom">If this value is true the Y position is relative to bottom Y coordinate of the last object rendered.
            If this value is false the Y position is relative to top Y coordinate of the last object rendered</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Security">
            <summary>
            Exposes an object to control the PDF document security
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Properties">
            <summary>
            Controls the title, subject, keywords, author and the creation date of the PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.TableOfContents">
            <summary>
            Controls the automatically generated table of the contents for the converted HTML document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Viewer">
            <summary>
            Controls the PDF viewer preferences
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Adds a PDF object after the last PDF object rendered
            </summary>
            <param name="pdfObject">The PDF object to be added to document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Layout(HiQPdfClient.PdfObject,System.Single)">
            <summary>
            Adds a PDF object at the given vertical offset after the last PDF object rendered
            </summary>
            <param name="pdfObject">The PDF object to be added to document</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Layout(HiQPdfClient.PdfObject,System.Single,System.Single)">
            <summary>
            Adds a PDF object at the given horizontal and vertical offset after the last PDF object rendered
            </summary>
            <param name="pdfObject">The PDF object to be added to document</param>
            <param name="dx">The horizontal offset after the last PDF object rendered</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Layout(HiQPdfClient.PdfObject,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Adds a PDF object at a given X and Y position in PDF page where the last object was rendered.
            The position can be absolute in PDF page or relative to last object rendered
            </summary>
            <param name="pdfObject">The page element to be added</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left X coordinate of the last object rendered.
            If this value is false the X position is absolute in PDF page</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom Y coordinate of the last object rendered.
            If this value is false the Y position is absolute in PDF page</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Layout(HiQPdfClient.PdfObject,System.Single,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Adds a PDF page element to this document at the given X and Y location in the PDF page where the last element rendering ended.
            The location can be absolute in PDF page or relative as an offset from the position where the last element rendering ended.
            </summary>
            <param name="pdfObject">The page element to be added</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left or right X coordinate of the last object rendered,
            function of the next parameter value. If this value is false the X position is absolute in PDF page</param>
            <param name="xRelToLeft">If this value is true the X position is relative to left X coordinate of the last object rendered.
            If this value is false the X position is relative to right X coordinate of the last object rendered</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom or top Y coordinate of the last object rendered,
            function of the next parameter value. If this value is false the Y position is absolute in PDF page</param>
            <param name="yRelToBottom">If this value is true the Y position is relative to bottom Y coordinate of the last object rendered.
            If this value is false the Y position is relative to top Y coordinate of the last object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddTopOutline(HiQPdfClient.PdfOutline)">
            <summary>
            Adds a top level outline in document
            </summary>
            <param name="outline">The outline to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddChildOutline(HiQPdfClient.PdfOutline,HiQPdfClient.PdfOutline)">
            <summary>
            Adds a child outline with the given parent in the outline hierarchy
            </summary>
            <param name="outline">The new outline to add</param>
            <param name="parentOutline">The parent outline which was previously added to document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateTopOutline(System.String,HiQPdfClient.PdfDestination)">
            <summary>
            Creates a top level outline in document
            </summary>
            <param name="text">The outline text</param>
            <param name="destination">The outline destination inside the PDF document</param>
            <returns>The created outline</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateChildOutline(System.String,HiQPdfClient.PdfDestination,HiQPdfClient.PdfOutline)">
            <summary>
            Creates a child outline with the given parent in the outline hierarchy
            </summary>
            <param name="text">The outline text</param>
            <param name="destination">The outline destination inside the PDF document</param>
            <param name="parentOutline">The parent outline in outlines hierarchy</param>
            <returns>The created outline</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromFile(System.String)">
            <summary>
            Attaches the given file to PDF document
            </summary>
            <param name="file">The full path of the file to attach</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromFile(System.String,System.String)">
            <summary>
            Attaches the given file to PDF document
            </summary>
            <param name="file">The full path of the file to attach</param>
            <param name="description">Descriptive noteText associated with the attachment</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromData(System.Byte[],System.String)">
            <summary>
            Creates an attachment in PDF document from the given data
            </summary>
            <param name="data">The data to embed in PDF</param>
            <param name="name">The name of the attachment</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromData(System.Byte[],System.String,System.String)">
            <summary>
            Creates an attachment in PDF document from the given data
            </summary>
            <param name="data">The data to embed in PDF</param>
            <param name="name">The name of the attachment</param>
            <param name="description">Descriptive noteText associated with the attachment</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromFile(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,HiQPdfClient.PdfAttachIconType,System.String)">
            <summary>
            Attaches the given file to the PDF document and creates an icon for the attachment in the given rectangle in the given PDF page
            </summary>
            <param name="page">The PDF page where to create the attachment icon</param>
            <param name="iconBounds">The bounding rectangle of the attachment icon</param>
            <param name="iconType">The attachment icon type</param>
            <param name="file">The full path of the file to attach</param>
            <returns>>The PDF attachment that can be further customized</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromData(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,HiQPdfClient.PdfAttachIconType,System.Byte[],System.String)">
            <summary>
            Creates an attachment in PDF document from the given data and an icon for attachment in the given rectangle in the given PDF page
            </summary>
            <param name="page">The PDF page where to create the attachment icon</param>
            <param name="iconBounds">The bounding rectangle of the attachment icon</param>
            <param name="iconType">The attachment icon type</param>
            <param name="data">The data to embed in PDF</param>
            <param name="name">The name of the attachment</param>
            <returns>The PDF attachment that can be further customized</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateAttachmentFromData(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,HiQPdfClient.PdfAttachIconType,System.Byte[],System.String,System.String)">
            <summary>
            Creates an attachment in PDF document from the given data and an icon for attachment in the given rectangle in the given PDF page
            </summary>
            <param name="page">The PDF page where to create the attachment icon</param>
            <param name="iconBounds">The bounding rectangle of the attachment icon</param>
            <param name="iconType">The attachment icon type</param>
            <param name="data">The data to embed in PDF</param>
            <param name="name">The name of the attachment</param>
            <param name="description">Descriptive text associated with the attachment</param>
            <returns>The PDF attachment that can be further customized</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateFileLink(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Creates link to a file in the given PDF page and the given bounds
            </summary>
            <param name="page">The PDF page where to create the link</param>
            <param name="rectangle">The link rectangle in the PDF page</param>
            <param name="file">The full or relative path to the file to link</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreatePdfLink(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,HiQPdfClient.PdfDestination)">
            <summary>
            Constructs a link in the given PDF page from the given rectangle to the given destination
            </summary>
            <param name="page">The PDF page where to create the link</param>
            <param name="rectangle">The link rectangle in PDF page</param>
            <param name="destination">The link destination</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateUriLink(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Constructs a link in the given PDF page from the given rectangle to the resource given by the the destination URI
            </summary>
            <param name="page">The PDF page where to create the link</param>
            <param name="rectangle">The link rectangle in PDF page</param>
            <param name="uri">The destination URI</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.CreateTextNote(HiQPdfClient.PdfPage,HiQPdfClient.PointFloat,System.String)">
            <summary>
            Constructs a text note in the given PDF page at the given location and with the given text
            </summary>
            <param name="page">The PDF page where to create the note</param>
            <param name="location">The location in PDF page where to create the note</param>
            <param name="text">The text to be displayed in the text note</param>
            <returns>The PDF text note that can be further customized</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.AddDigitalSignature(HiQPdfClient.PdfDigitalSignature,HiQPdfClient.PdfPage)">
            <summary>
            Adds a digital signature to a PDF document in the given PDF page 
            </summary>
            <param name="signature">The digital signature to be applied to the document</param>
            <param name="pdfPage">The PDF page where to apply the digital signature</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.SetOpenAction(HiQPdfClient.PdfActionBase)">
            <summary>
            Set an action a PDF viewer will execute when the document is opened. An action can be the submit or reset of the PDF form,
            the execution of a JavaScript code or the jump to a destination in the PDF document
            </summary>
            <param name="action">The action to be execute when the document is opened in a PDF viewer</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.Compress">
            <summary>
            This property controls the content streams compression in the PDF document. 
            By default the content streams are compressed to reduce the size of the generated PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.ImagesCompression">
            <summary>
            Controls the images compression percentage in the PDF document on a scale from 0 to 100.
            A 0 compression produces the best quality images which leads to larger PDF documents while a
            100 compression produces low quality images and small PDF documents
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocument.RenderWithTransparency">
            <summary>
            Indicates if the resulted PDF can contain transparent objects. This property is true by default
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocument.Close">
            <summary>
            Call this method to release the document resources
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDocumentControl">
            <summary>
            This class controls the properties of the PDF document generated by the HTML to PDF Converter.
            A reference to an object of this class is exposed by the <see cref="P:HiQPdfClient.HtmlToPdf.Document"/> property of the
            <see cref="T:HiQPdfClient.HtmlToPdf"/> class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.#ctor(HiQPdfClient.HtmlToPdf)">
            <summary>
            Constructs an object controlling the HTML to PDF conversion
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.InsertPdfFileBefore(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to insert a PDF file before the HTML to PDF conversion in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfFile">The fully qualified path of the PDF file to insert</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.InsertPdfFileBefore(System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to insert a PDF document from data before the HTML to PDF conversion in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.AppendPdfFile(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to append a PDF file after the HTML to PDF conversion in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfFile">The fully qualified path of the PDF file to append</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.AppendPdfFile(System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Call this method to append a PDF document from data after the HTML to PDF conversion in the final document. The boolean parameter controls if
            the header and footer are applied on external PDF document. When the parameter is true the interactive features
            are disabled in the external PDF
            </summary>
            <param name="pdfData">The PDF document data</param>
            <param name="applyHeaderFooter">Controls if the header and footer are applied on external PDF document</param>
            <param name="applyHeaderInFirstPage">Controls if the header is applied in first page of the added document</param>
            <param name="applyFooterInFirstPage">Controls if the footer is applied in first page of the added document</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.InsertPdfFileBefore(System.String)">
            <summary>
            Call this method to insert a PDF file before the HTML to PDF conversion in the final document
            </summary>
            <param name="pdfFile">The fully qualified path of the PDF file to insert</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.InsertPdfFileBefore(System.Byte[])">
            <summary>
            Call this method to insert a PDF document from data before the HTML to PDF conversion in the final document
            </summary>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.AppendPdfFile(System.String)">
            <summary>
            Call this method to append a PDF file after the HTML to PDF conversion in the final document
            </summary>
            <param name="pdfFile">The fully qualified path of the PDF file to append</param>
        </member>
        <member name="M:HiQPdfClient.PdfDocumentControl.AppendPdfFile(System.Byte[])">
            <summary>
            Call this method to append a PDF document from data after the HTML to PDF conversion in the final document
            </summary>
            <param name="pdfData">The PDF document data</param>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.PdfStandard">
            <summary>
            The PDF document standard
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ColorSpace">
            <summary>
            The PDF document color space
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.PageSize">
            <summary>
            The PDF document page size. The default value is A4. 
            The final width and height of the PDF pages is also influenced by the <see cref="P:HiQPdfClient.PdfDocumentControl.PageOrientation"/> property
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.PageOrientation">
            <summary>
            The PDF document pages orientation. The default orientation is potrait
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Margins">
            <summary>
            The PDF document margins. By default all the margins are 0
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.DestX">
            <summary>
            The destination rectangle top left corner X coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.DestY">
            <summary>
            The destination rectangle top left corner Y coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.DestWidth">
            <summary>
            The width in points of the destination PDF rectangle where the HTML content will be rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.DestHeight">
            <summary>
            The height in points of the destination PDF rectangle where the HTML content will be rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.TopPadding">
            <summary>
            A padding to insert above the content rendered in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.BottomPadding">
            <summary>
            A padding to insert under the content rendered in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Header">
            <summary>
            Controls the visibility and the content of the header of the generated PDF document.
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Footer">
            <summary>
            Controls the visibility and the content of the footer of the generated PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Properties">
            <summary>
            Controls the title, subject, keywords, author and the creation date of the PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Security">
            <summary>
            The object exposed by this property can be used to password protect the PDF document, 
            disable printing, copying or editing of the PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Outlines">
            <summary>
            Controls the automatically generated outlines of the PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.TableOfContents">
            <summary>
            Controls the automatically generated table of the contents for the converted HTML document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.AutoPdfForm">
            <summary>
            The object exposed by this property can be used to control the automatically created PDF form
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Viewer">
            <summary>
            Controls the PDF viewer preferences
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.Compress">
            <summary>
            This property controls the content streams compression in the PDF document generated by the HTML to PDF converter. 
            By default the content streams are compressed to reduce the size of the generated PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ImagesCompression">
            <summary>
            Controls the images compression percentage in the PDF document on a scale from 0 to 100.
            A 0 compression produces the best quality images which leads to larger PDF documents while a
            100 compression produces low quality images and small PDF documents
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.FitPageWidth">
            <summary>
            Controls if the content is scaled down to fit the PDF page width. This property is true by default.
            When this property is true the images and the title font can be smaller than in HTML
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.FitPageHeight">
            <summary>
            Controls if the content is scaled down to fit the PDF page height. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ForceFitPageWidth">
            <summary>
            Controls if the content can be enlarged to fit the PDF page width when <see cref="P:HiQPdfClient.PdfDocumentControl.FitPageWidth"/> is true. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ResizePageWidth">
            <summary>
            When this property is true and both <see cref="P:HiQPdfClient.PdfDocumentControl.FitPageWidth"/> and <see cref="P:HiQPdfClient.PdfDocumentControl.FitPageHeight"/> are false the PDF page width can be resized 
            to display the whole content without scaling. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.PostCardMode">
            <summary>
            When this property is true the generated PDF document will have only one page 
            to display the whole content without scaling. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ImagesCutAllowed">
            <summary>
            Controls if cutting images between PDF pages is permitted in the PDF document generated by the HTML to PDF converter. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.BreakInsideAvoidHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements not accepting page breaks inside them
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.BreakBeforeHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break before them in PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.BreakAfterHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements that will receive a page break after them in the resulted PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ConvertHttpLinks">
            <summary>
            Controls if the HTTP links in the HTML document are converted to HTTP links in PDF. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.LiveExcludedElements">
            <summary>
            Controls if the HTML elements excluded from rendering are live in PDF. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ConvertInternalLinks">
            <summary>
            Controls if the internal links in HTML are converted to internal links in PDF.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.FontEmbedding">
            <summary>
            Controls if the fonts used in HTML are embedded in the PDF document. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ScrictIsoRendering">
            <summary>
            Indicates if the generated PDF document respects strictly the ISO standard.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.HighResolutionGraphics">
            <summary>
            Indicates if the PDF graphics are using high resolution coordinates. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RenderImagesWithTransparency">
            <summary>
            Indicates if the images are rendered with transparency in PDF. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ScaleImages">
            <summary>
            Indicates if the images can be scaled in PDF. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.DisplayMaskedImages">
            <summary>
            Indicates if the masked images are displayed.
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RenderWithTransparency">
            <summary>
            Indicates if the resulted PDF can contain transparent objects. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.ColorProfile">
            <summary>
            The color profile used by document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RepeatTheadAllowed">
            <summary>
            Indicates if the repeating of thead content of a HTML table in PDF is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RepeatTfootAllowed">
            <summary>
            Indicates if the repeating of thead content of a HTML table in PDF is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RepeatTheadStacked">
            <summary>
            Indicates if the thead content of the HTML tables rendered on a PDF page are stacked or displayed at the same level. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.RepeatTfootStacked">
            <summary>
            Indicates if the tfoot content of the HTML tables rendered on a PDF page are stacked or displayed at the same level. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDocumentControl.BackgroundColor">
            <summary>
            The PDF pages background color
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDocumentFooter">
            <summary>
            The PDF document footer canvas
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDocumentHeader">
            <summary>
            The PDF document header canvas 
            method of the <see cref="T:HiQPdfClient.PdfDocument"/> class
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfDpiTransform">
            <summary>
            Transform between pixels, points and inches
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromInchesToPixels(System.Single)">
            <summary>
            Transforms inches to pixels 
            </summary>
            <param name="inches">A value in inches</param>
            <returns>The value in pixels</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromPixelsToInches(System.Single)">
            <summary>
            Transforms pixels to inches
            </summary>
            <param name="pixels">A value in pixels</param>
            <returns>The value in inches</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromInchesToPoints(System.Single)">
            <summary>
            Transforms inches to points 
            </summary>
            <param name="inches">A value in inches</param>
            <returns>The value in points</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromPointsToInches(System.Single)">
            <summary>
            Transforms points to inches
            </summary>
            <param name="points">A value in points</param>
            <returns>The value in inches</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromPointsToPixels(System.Single)">
            <summary>
            Transforms points to pixels 
            </summary>
            <param name="points">A value in points</param>
            <returns>The value in pixels</returns>
        </member>
        <member name="M:HiQPdfClient.PdfDpiTransform.FromPixelsToPoints(System.Single)">
            <summary>
            Transforms pixels to points
            </summary>
            <param name="pixels">A value in pixels</param>
            <returns>The value in points</returns>
        </member>
        <member name="T:HiQPdfClient.PdfDrawableObject">
            <summary>
            Generic base class for all the objects that can be laid out in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.BackColor">
            <summary>
            The PDF object back color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.ForeColor">
            <summary>
            The PDF object fore color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.Gradient">
            <summary>
            The PDF object gradient color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.ClipRectangle">
            <summary>
            The clip rectangle applied when drawing the object in PDF
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.Opacity">
            <summary>
            The element opacity as a value between 0 which means completely transparent to 100 which means completely opaque.
            The object is completely opaque by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.BlendingMode">
            <summary>
            The blending mode when this object is drawn in PDF.
            This property is Normal by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfDrawableObject.LineStyle">
            <summary>
            The style of the lines rendered by this object
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfDrawableObject.SetTranslation(System.Single,System.Single)">
            <summary>
            Sets the horizontal and vertical translation of the coordinates system before drawing this object in PDF
            </summary>
            <param name="dx">The horizontal translation in points</param>
            <param name="dy">The vertical translation in points</param>
        </member>
        <member name="M:HiQPdfClient.PdfDrawableObject.SetScaling(System.Single,System.Single)">
            <summary>
            Sets the horizontal and vertical scaling of the coordinates system before drawing this object in PDF
            </summary>
            <param name="scaleX">The horizontal scaling</param>
            <param name="scaleY">THe vertical scaling</param>
        </member>
        <member name="M:HiQPdfClient.PdfDrawableObject.SetRotationAngle(System.Single)">
            <summary>
            Sets the clockwise rotation angle of the coordinates system before drawing this object in PDF
            </summary>
            <param name="angle">The rotation angle</param>
        </member>
        <member name="M:HiQPdfClient.PdfDrawableObject.SetSkewAngles(System.Single,System.Single)">
            <summary>
            Sets the clockwise skew angles of the coordinates system before drawing this object in PDF
            </summary>
            <param name="angleX">Horizontal skew angle</param>
            <param name="angleY">Vertical skew angle</param>
        </member>
        <member name="T:HiQPdfClient.PdfEllipse">
            <summary>
            The PDF ellipse class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfEllipse.#ctor(HiQPdfClient.PointFloat,System.Single,System.Single)">
            <summary>
            Constructs an elipse with the given center point and the given X and Y radius
            </summary>
            <param name="center">The ellipse center coordinates in points</param>
            <param name="radiusX">The horizontal radius</param>
            <param name="radiusY">The vertical radius</param>
        </member>
        <member name="P:HiQPdfClient.PdfEllipse.X">
            <summary>
            The X coordinate of the ellipse center
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipse.Y">
            <summary>
            The Y coordinate of the ellipse center
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipse.XRadius">
            <summary>
            The horizontal radius
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipse.YRadius">
            <summary>
            The vertical radius
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfEllipseArc">
            <summary>
            The PDF ellipse arc class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfEllipseArc.#ctor(HiQPdfClient.RectangleFloat,System.Single,System.Single)">
            <summary>
            Constructs an ellipse arc with the given parameters
            </summary>
            <param name="ellipseRectangle">The ellipse bounding rectangle</param>
            <param name="startAngle">The counter clockwise start angle, in degrees, relative to the x-axis</param>
            <param name="arcAngle">The counter clockwise arc angle, in degrees, relative to the starting angle</param>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseArc.StartAngle">
            <summary>
            The counter clockwise start angle, in degrees, relative to the x-axis
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseArc.ArcAngle">
            <summary>
            The counter clockwise arc angle, in degrees, relative to the starting angle
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseArc.EllipseRectangle">
            <summary>
            The ellipse bounding rectangle
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfEllipseSlice">
            <summary>
            The PDF ellipse slice class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfEllipseSlice.#ctor(HiQPdfClient.RectangleFloat,System.Single,System.Single)">
            <summary>
            Constructs an ellipse slice with the given parameters
            </summary>
            <param name="ellipseRectangle">The ellipse bounding rectangle</param>
            <param name="startAngle">The counter clockwise start angle, in degrees, relative to the x-axis</param>
            <param name="sliceAngle">The counter clockwise slice angle, in degrees, relative to the starting angle</param>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseSlice.StartAngle">
            <summary>
            The counter clockwise start angle, in degrees, relative to the x-axis
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseSlice.SliceAngle">
            <summary>
            The counter clockwise slice angle, in degrees, relative to the starting angle
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfEllipseSlice.EllipseRectangle">
            <summary>
            The ellipse bounding rectangle
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfEncryptionLevel">
            <summary>
            The encryption level
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfEncryptionLevel.Low">
            <summary>
            Encrypt PDF document with a 40-bit key
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfEncryptionLevel.High">
            <summary>
            Ecrypt PDF document with a 128-bit key
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfEncryptionLevel.VeryHigh">
            <summary>
            Ecrypt PDF document with a 256-bit key
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfEncryptionMode">
            <summary>
            The PDF encryption mode
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfEncryptionMode.RC4">
            <summary>
            RC4 encryption
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfEncryptionMode.AES">
            <summary>
            AES encryption
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFileLink">
            <summary>
            A link to an external file in PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFileLink.#ctor(HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Creates a file link object to add to PDF document
            </summary>
            <param name="linkRectangle">The link rectangle in PDF page</param>
            <param name="filePath">The linked file absolute or relative path</param>
        </member>
        <member name="P:HiQPdfClient.PdfFileLink.LinkRectangle">
            <summary>
            The file link rectangle in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFileLink.FilePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFont">
            <summary>
            The PDF font class defines a font that can be added to a PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFont.#ctor(System.String,System.Single,System.Boolean)">
            <summary>
            Constructs a PDF font based on a font family name
            </summary>
            <param name="familyName">Font family name</param>
            <param name="fontSize">Font size in points</param>
            <param name="embedFont">Embed font in PDF</param>
        </member>
        <member name="M:HiQPdfClient.PdfFont.#ctor(HiQPdfClient.PdfStandardFont,System.Single)">
            <summary>
            Constructs a standard PDF font
            </summary>
            <param name="standardFamily">The standard PDF font family</param>
            <param name="fontSize">The standard font size in points</param>
        </member>
        <member name="M:HiQPdfClient.PdfFont.#ctor(System.String,System.Single)">
            <summary>
            Constructs a PDF font based on a font file
            </summary>
            <param name="fontFilePath">The font file name</param>
            <param name="fontSize">The font size in points</param>
        </member>
        <member name="M:HiQPdfClient.PdfFont.#ctor(System.Byte[],System.Single)">
            <summary>
            Constructs a PDF font based on binary font data
            </summary>
            <param name="fontData">The font data</param>
            <param name="fontSize">The font size in points</param>
        </member>
        <member name="P:HiQPdfClient.PdfFont.FontFamily">
            <summary>
            The font family name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.EmbedFont">
            <summary>
            Indicates if the font should be embedded in PDF document. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.StandardFamily">
            <summary>
            The standard font of this PDF font
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.FontData">
            <summary>
            The font data
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.Size">
            <summary>
            The PDF font size in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.Bold">
            <summary>
            Indicates if the font is bold
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.Italic">
            <summary>
            Indicates if the font is italic
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.Underline">
            <summary>
            Indicates if the font is underline
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFont.Strikeout">
            <summary>
            Indicates if the font is strikeout
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFooter">
            <summary>
            This class controls the footer of the PDF document generated by the HTML to PDF Converter. 
            A reference to an object of this class is exposed by the <see cref="P:HiQPdfClient.PdfDocumentControl.Footer"/> property
            of the <see cref="T:HiQPdfClient.PdfDocumentControl"/> class
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.Enabled">
            <summary>
            Controls if the generated PDF document has a footer or not. This property is false by default
            and the document does not have a footer
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.BackgroundColor">
            <summary>
            The color to be used as background for the footer
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.Height">
            <summary>
            The footer height in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.RepeatInFirstPage">
            <summary>
            Controls if the footer is repeated in the first page of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.RepeatInEvenPages">
            <summary>
            Controls if the footer is repeated in even pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.RepeatInOddPages">
            <summary>
            Controls if the footer is repeated in odd pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.FirstPageNumber">
            <summary>
            Controls the number of the first page in page numbering control
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFooter.AdjustPageCount">
            <summary>
            Can be used to adjust the total number of pages in page numbering control
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFooter.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Layout a PDF object in the footer
            </summary>
            <param name="pdfObject">The PDF object to be laid out</param>
        </member>
        <member name="T:HiQPdfClient.PdfForm">
            <summary>
            The PDF document form class
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfForm.Document">
            <summary>
            The document to which this form belongs
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddCheckBox(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormCheckBox)">
            <summary>
            Adds an existing check box field in form
            </summary>
            <param name="pdfPage">The PDF page where to add the check box</param>
            <param name="checkBox">The check box field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddCheckBox(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat)">
            <summary>
            Creates a check box field in form
            </summary>
            <param name="pdfPage">The PDF page where to create the check box</param>
            <param name="boundingRectangle">The check box field bounding rectangle</param>
            <returns>The check box field created</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddListBox(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormListBox)">
            <summary>
            Adds an existing list box field in form
            </summary>
            <param name="pdfPage">The PDF page where to add the list box</param>
            <param name="listBox">The list box field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddListBox(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String[],HiQPdfClient.PdfFont)">
            <summary>
            Creates a list box field in form
            </summary>
            <param name="pdfPage">The PDF page where to create the list box</param>
            <param name="boundingRectangle">The list box field bounding rectangle</param>
            <param name="listItems">The list of items</param>
            <param name="pdfFont">The list box items text font</param>
            <returns>The created list box field</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddButton(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormButton)">
            <summary>
            Adds an existing button in form
            </summary>
            <param name="pdfPage">The PDF page where to add the button</param>
            <param name="button">The button field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddButton(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Creates a button in form
            </summary>
            <param name="pdfPage">The PDF page where to create the button</param>
            <param name="boundingRectangle">The button field bounding rectangle</param>
            <param name="text">The text displayed on the button</param>
            <param name="pdfFont">The button text font</param>
            <returns>The created button</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddTextBox(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormTextBox)">
            <summary>
            Adds an existing text box field in form
            </summary>
            <param name="pdfPage">The PDF page where to add the noteText box</param>
            <param name="textBox">The noteText box field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddTextBox(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Creates a text box field in form
            </summary>
            <param name="pdfPage">The PDF page where to create the text box</param>
            <param name="boundingRectangle">The text box field bounding rectangle</param>
            <param name="text">The text displayed in the text box</param>
            <param name="pdfFont">The text font</param>
            <returns>The created text box</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddComboBox(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormComboBox)">
            <summary>
            Adds an existing combo box field in form
            </summary>
            <param name="pdfPage">The PDF page where to add the combo box</param>
            <param name="comboBox">The combo box field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddComboBox(HiQPdfClient.PdfPage,HiQPdfClient.RectangleFloat,System.String[],HiQPdfClient.PdfFont)">
            <summary>
            Creates a combo box field in form
            </summary>
            <param name="pdfPage">The PDF page where to create the combo box</param>
            <param name="boundingRectangle">The combo box field bounding rectangle</param>
            <param name="listItems">The list of items</param>
            <param name="pdfFont">The combo box items text font</param>
            <returns>The created combo box field</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddRadioButtonsGroup(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormRadioButtonsGroup)">
            <summary>
            Adds an existing group of radio buttons in the form
            </summary>
            <param name="pdfPage">The PDF page where to add the group of radio buttons</param>
            <param name="radioButtonsGroup">The radio buttons group field to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfForm.AddRadioButtonsGroup(HiQPdfClient.PdfPage)">
            <summary>
            Creates a group of radio buttons in the form
            </summary>
            <param name="pdfPage">The PDF page where to create the group of radio buttons</param>
            <returns>The created radio buttons group</returns>
        </member>
        <member name="M:HiQPdfClient.PdfForm.FlattenFields">
            <summary>
            Flattens all the fields in the form
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormButton">
            <summary>
            A button in a PDF form
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormButton.#ctor(HiQPdfClient.RectangleFloat,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Creates a noteText box form field
            </summary>
            <param name="bounds">The button control bounds</param>
            <param name="text">The button noteText</param>
            <param name="pdfFont">The button font</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormButton.Text">
            <summary>
            The button noteText
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormButton.Font">
            <summary>
            The button font
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormCheckBox">
            <summary>
            A check box in a PDF form
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormCheckBox.#ctor(HiQPdfClient.RectangleFloat,System.Boolean)">
            <summary>
            Constructs a check box form fields
            </summary>
            <param name="box">The check box control bounding box</param>
            <param name="isChecked">The checked state of the check box</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormCheckBox.Checked">
            <summary>
            The checked status in form of the check box field
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormComboBox">
            <summary>
            A combo box in a PDF form consisting in a drop down list and an optional editable text box
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormComboBox.#ctor(HiQPdfClient.RectangleFloat,System.String[],HiQPdfClient.PdfFont)">
            <summary>
            Creates a combo box form field
            </summary>
            <param name="bounds">The combo box control bounds</param>
            <param name="items">The combo box items</param>
            <param name="pdfFont">The combo box font</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.Editable">
            <summary>
            A flag indicating if the combo box includes also an editable noteText box besides the drop down list.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.ListItems">
            <summary>
            The combo box items
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.Value">
            <summary>
            The list box value
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.Font">
            <summary>
            The list items font
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.AllowMultiSelect">
            <summary>
            Indicates if the multiple selection is allowed for this combo box field. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.SortItems">
            <summary>
            Indicates if the list items are sorted alphabetically in this combo box field. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.SpellChecking">
            <summary>
            Indicates if the noteText entered in this field is spell checked. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormComboBox.CommitOnSelectionChanged">
            <summary>
            Indicates if a new value selected is committed immediately without waiting to leave the field. This property is false by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormField">
            <summary>
            A field in a PDF document form
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.ParentForm">
            <summary>
            The parent form
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Action">
            <summary>
            The action to be performed when the field is activated, for example when a button field is clicked
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Name">
            <summary>
            The field name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.DefaultValue">
            <summary>
            The default value of the field to which the field reverts when a reset form action is executed
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.ReadOnly">
            <summary>
            Indicates if the field is read only. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Required">
            <summary>
            Indicates if the field should have a value at the time it is exported by a submit form action. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Export">
            <summary>
            Indicates if field is exported by a submit form action. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.ToolTip">
            <summary>
            The field tooltip
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Style">
            <summary>
            Gets or sets the PDF form field style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.BoundingRectangle">
            <summary>
            The field bounding rectangle in PDF page. The rectangle dimensions are expressed in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormField.Flatten">
            <summary>
            Indicates if the field is flattened in the generated PDF document
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormFieldStyle">
            <summary>
            The style of a PDF form field
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormFieldStyle.BorderStyle">
            <summary>
            The form field border style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormFieldStyle.BackColor">
            <summary>
            The form field background color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormFieldStyle.ForeColor">
            <summary>
            The form field fore color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormFieldStyle.BorderColor">
            <summary>
            The form field border color
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormListBox">
            <summary>
            A list box form field that can be added in the PDF form of a PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormListBox.#ctor(HiQPdfClient.RectangleFloat,System.String[],HiQPdfClient.PdfFont)">
            <summary>
            Creates a list box form field
            </summary>
            <param name="bounds">The list box control bounds</param>
            <param name="listItems">The list box items</param>
            <param name="pdfFont">The list box items font</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.ListItems">
            <summary>
            The list box items
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.Value">
            <summary>
            The list box value
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.Font">
            <summary>
            The list box items font
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.AllowMultiSelect">
            <summary>
            Indicates if the multiple selection is allowed for this list box field. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.SortItems">
            <summary>
            Indicates if the list items are sorted alphabetically in this list box field. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.SpellChecking">
            <summary>
            Indicates if the noteText entered in this field is spell checked. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormListBox.CommitOnSelectionChanged">
            <summary>
            Indicates if a new value selected is committed immediately without waiting to leave the field. This property is false by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormRadioButton">
            <summary>
            A radio button in a radio buttons group
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButton.#ctor(HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Creates a radio button form field
            </summary>
            <param name="bounds">The radio button bounds</param>
            <param name="buttonName">The radio button name</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormRadioButton.ParentGroup">
            <summary>
            The parent radio buttons group
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormRadioButton.Name">
            <summary>
            The radio button name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormRadioButton.BoundingRectangle">
            <summary>
            The bounding rectangle in PDF page of the radio button. The rectangle dimensions are expressed in points
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormRadioButtonsGroup">
            <summary>
            A group of radio buttons in a PDF form
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.#ctor">
            <summary>
            Creates a radio buttons group
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfPage,HiQPdfClient.PdfFormRadioButton)">
            <summary>
            Adds an existing radio button to this group in a PDF page
            </summary>
            <param name="pdfPage">The radio button PDF page</param>
            <param name="radioButton">The radio button to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.RectangleFloat,System.String,HiQPdfClient.PdfPage)">
            <summary>
            Creates a radio button with given rectangle and the given name in the given PDF page
            </summary>
            <param name="boundingRectangle">The radio button bounding rectangle</param>
            <param name="buttonName">The radio button name</param>
            <param name="pdfPage">The PDF page where to add this radio button</param>
            <returns>The created radio button</returns>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfFormRadioButton)">
            <summary>
             Adds a radio button to this group after the last PDF object rendered
            </summary>
            <param name="radioButton">The radio button to add</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfFormRadioButton,System.Single)">
            <summary>
            Adds a radio button to this group at the given vertical offset after the last PDF object rendered
            </summary>
            <param name="radioButton">The radio button to add</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfFormRadioButton,System.Single,System.Single)">
            <summary>
            Adds a radio button to this group at the given horizontal and vertical offset after the last PDF object rendered
            </summary>
            <param name="radioButton">The radio button to add</param>
            <param name="dx">The horizontal offset after the last PDF object rendered</param>
            <param name="dy">The vertical offset after the last PDF object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfFormRadioButton,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Adds a radio button to this group at a given X and Y position in PDF page where the last object was rendered.
            The position can be absolute in PDF page or relative to last object rendered
            </summary>
            <param name="radioButton">The radio button to add</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left X coordinate of the last object rendered.
            If this value is false the X position is absolute in PDF page</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom Y coordinate of the last object rendered.
            If this value is false the Y position is absolute in PDF page</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.AddRadioButton(HiQPdfClient.PdfFormRadioButton,System.Single,System.Boolean,System.Boolean,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Adds a radio button to this group at the given X and Y location in the PDF page where the last element rendering ended.
            The location can be absolute in PDF page or relative as an offset from the position where the last element rendering ended.
            </summary>
            <param name="radioButton">The radio button to add</param>
            <param name="xPos">The X position of the object in the PDF page where the last object was rendered</param>
            <param name="xRelPos">If this value is true the X position is relative to the left or right X coordinate of the last object rendered,
            function of the next parameter value. If this value is false the X position is absolute in PDF page</param>
            <param name="xRelToLeft">If this value is true the X position is relative to left X coordinate of the last object rendered.
            If this value is false the X position is relative to right X coordinate of the last object rendered</param>
            <param name="yPos">The Y position of the object in the PDF page where the last object was rendered</param>
            <param name="yRelPos">If this value is true the Y position is relative to the bottom or top Y coordinate of the last object rendered,
            function of the next parameter value. If this value is false the Y position is absolute in PDF page</param>
            <param name="yRelToBottom">If this value is true the Y position is relative to bottom Y coordinate of the last object rendered.
            If this value is false the Y position is relative to top Y coordinate of the last object rendered</param>
        </member>
        <member name="M:HiQPdfClient.PdfFormRadioButtonsGroup.SetCheckedRadioButton(HiQPdfClient.PdfFormRadioButton)">
            <summary>
            Checks on the a radio button
            </summary>
            <param name="radioButton">The radio button to check on</param>
        </member>
        <member name="T:HiQPdfClient.PdfFormSubmitFlags">
            <summary>
            The submit form action flags that can be combined to specify various characteristics of the action
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.Default">
            <summary>
            The default value of the flags
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.IncludeExclude">
            <summary>
            If clear, the Fields array specifies which fields to include in the submission. 
            If set, the Fields array tells which fields to exclude
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.IncludeNoValueFields">
            <summary>
            If set, all fields designated by the Fields array and the Include/Exclude flag shall be submitted, regardless of whether they have a value. 
            For fields without a value, only the field name shall betransmitted. 
            If clear, fields without a value shall not be submitted
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.ExportFormat">
            <summary>
            Meaningful only if the SubmitPDF and XFDF flags are clear. If set, field names and values shall be submitted in HTML Form format. 
            If clear, they shall be submitted in Forms Data Format
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.GetMethod">
            <summary>
            If set, field names and values shall be submitted using an HTTP GET request. 
            If clear, they shall be submitted using a POST request. 
            This flag is meaningful only when the ExportFormat flag is set; if ExportFormat is clear, this flag shall also be clear
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.SubmitCoordinates">
            <summary>
            If set, the coordinates of the mouse click that caused the submit-form action shall be transmitted as part of the form data. 
            The coordinate values are relative to the upper-left corner of the field’s widget annotation rectangle.
            This flag shall be used only when the ExportFormat flag is set. If ExportFormat is clear, this flag shall also be clear
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.XFDF">
            <summary>
            Shall be used only if the SubmitPDF flags are clear. If set, field names and values shall be submitted as XFDF
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.IncludeAppendSaves">
            <summary>
            Shall be used only when the form is being submitted in Forms Data Format (that is, when both the XFDF and ExportFormat flags are clear). 
            If set, the submitted FDF file shall include the contents of all incremental updates to the underlying PDF document, as contained in 
            the Differences entry in the FDF dictionary. 
            If clear, the incremental updates shall not be included
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.IncludeAnnotations">
            <summary>
            Shall be used only when the form is being submitted in Forms Data Format (that is, when both the XFDF and ExportFormat flags are clear). 
            If set, the submitted FDF file shall include includes all markup annotations in the underlying PDF document. 
            If clear, markup annotations shall not be included
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.SubmitPDF">
            <summary>
            If set, the document shall be submitted as PDF, using the MIME content type application/pdf. 
            If set, all other flags shall be ignored except GetMethod
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.CanonicalFormat">
            <summary>
            If set, any submitted field values representing dates shall be converted to the standard format
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.ExclNonUserAnnots">
            <summary>
            Shall be used only when the form is being submitted in Forms Data Format (that is, when both the XFDF and ExportFormat flags are clear) and the IncludeAnnotations flag is set. 
            If set, it shall include only those markup annotations whose T entry matches the name of the current user, as determined by the remote server to which the form is being submitted.
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.ExclFKey">
            <summary>
            Shall be used only when the form is being submitted in Forms Data Format (that is, when both the XFDF and ExportFormat flags are clear). 
            If set, the submitted FDF shall exclude the F entry.
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFormSubmitFlags.EmbedForm">
            <summary>
            Shall be used only when the form is being submitted in Forms Data Format (that is, when both the XFDF and ExportFormat flags are clear). 
            If set, the F entry of the submitted FDF shall be a file specification containing an embedded file stream representing the PDF file from which the FDF is being submitted
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFormTextBox">
            <summary>
            A noteText box in a PDF form
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfFormTextBox.#ctor(HiQPdfClient.RectangleFloat,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Creates a noteText box form field
            </summary>
            <param name="bounds">The noteText box control bounds</param>
            <param name="text">The noteText box noteText</param>
            <param name="pdfFont">The noteText font</param>
        </member>
        <member name="P:HiQPdfClient.PdfFormTextBox.Text">
            <summary>
            The noteText displayed in the noteText box
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormTextBox.Font">
            <summary>
            The noteText box font
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormTextBox.IsMultiLine">
            <summary>
            Indicates if the noteText box is multiline. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormTextBox.IsPassword">
            <summary>
            Indicates if this noteText box is used to enter a password.  This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfFormTextBox.MaxLength">
            <summary>
            The maximum length of the field noteText in characters
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfFullScreenExitMode">
            <summary>
            The viewer page mode on exiting full screen
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFullScreenExitMode.None">
            <summary>
            Neither document outline nor thumbnail images are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFullScreenExitMode.Outlines">
            <summary>
            Document outlines are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFullScreenExitMode.Thumbnails">
            <summary>
            Thumbnail images are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfFullScreenExitMode.OptionalContent">
            <summary>
            Optional content group panel is visible
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfGoToAction">
            <summary>
            The Go To action class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfGoToAction.#ctor(HiQPdfClient.PdfDestination)">
            <summary>
             Constructs an empty Go-To action
            </summary>
            <param name="destination">The Go-To action destination</param>
        </member>
        <member name="P:HiQPdfClient.PdfGoToAction.Destination">
            <summary>
            The Go-To action destination
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfGradient">
            <summary>
            The PDF gradient color class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfGradient.#ctor(HiQPdfClient.PdfGradientDirection,HiQPdfClient.PdfColor,HiQPdfClient.PdfColor)">
            <summary>
            The PDF gradient constructor
            </summary>
            <param name="direction">Gradient direction</param>
            <param name="start">Gradient start color</param>
            <param name="end">Gradient end color</param>
        </member>
        <member name="P:HiQPdfClient.PdfGradient.StartColor">
            <summary>
            The gradient start color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfGradient.EndColor">
            <summary>
            The gradient end color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfGradient.Direction">
            <summary>
            The gradient direction
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfGradientDirection">
            <summary>
            PDF gradient color direction
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfGradientDirection.Horizontal">
            <summary>
            Left to right gradient
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfGradientDirection.Vertical">
            <summary>
            Top to bottom vertical gradient
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfGradientDirection.ForwardDiagonal">
            <summary>
            Top left to bottom right diagonal gradient
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfGradientDirection.BackwardDiagonal">
            <summary>
            Top right to bottom left diagonal gradient
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfHeader">
            <summary>
            This class controls the header of the PDF document generated by the HTML to PDF Converter. 
            A reference to an object of this class is exposed by the <see cref="P:HiQPdfClient.PdfDocumentControl.Header"/> property
            of the <see cref="T:HiQPdfClient.PdfDocumentControl"/> class
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.Enabled">
            <summary>
            Controls if the generated PDF document has a header or not. This property is false by default
            and the document does not have a header
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.BackgroundColor">
            <summary>
            The color to be used as background for the header
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.Height">
            <summary>
            Gets or sets the height in points of header. 1 point is 1/72 inch.
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.RepeatInFirstPage">
            <summary>
            Controls if the header is repeated in the first page of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.RepeatInEvenPages">
            <summary>
            Controls if the header is repeated in even pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.RepeatInOddPages">
            <summary>
            Controls if the header is repeated in odd pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.FirstPageNumber">
            <summary>
            Controls the number of the first page in page numbering control
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHeader.AdjustPageCount">
            <summary>
            Can be used to adjust the total number of pages in page numbering control
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHeader.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Layout a PDF object in the header
            </summary>
            <param name="pdfObject">The PDF object to be laid out</param>
        </member>
        <member name="T:HiQPdfClient.PdfHtml">
            <summary>
            An object of this class can be laid out in any position in a PDF document to render HTML content in place.
            Multiple objects of this type can be laid out in the same PDF page and even overlapped.
            If there is no background defined in the HTML document then the background of the rendered content in PDF will be transparent,
            making visible the existing content under it
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor">
            <summary>
            Creates an empty HTML to PDF object. The <see cref="P:HiQPdfClient.PdfHtml.UrlToConvert"/> property or the <see cref="P:HiQPdfClient.PdfHtml.HtmlToConvert"/> property 
            must be set after object creation
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.String)">
            <summary>
            Creates a HTML to PDF object to render the HTML from a given URL in the top left corner of the PDF page to which is added
            </summary>
            <param name="url">The URL to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.String)">
            <summary>
            Creates a HTML to PDF object to render the HTML from a given URL at the given coordinate in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Creates a HTML to PDF object to render the HTML from a given URL at the given coordinate and having a given width in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Creates a HTML to PDF object to render the HTML from a given URL within a given destination box in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="destHeight">The destination box height in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code in the top left corner of the PDF page to which this object is added
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code at the given coordinate in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code at the given coordinate and having a given width in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtml.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code within a given destination box in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="destHeight">The destination box height in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.UrlToConvert">
            <summary>
            The URL to convert 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.HtmlToConvert">
            <summary>
            The HTML code to convert 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.BaseUrl">
            <summary>
            The base URL that can be used to resolve the relative URLs found in the HTML code to convert
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.DestX">
            <summary>
            The destination rectangle top left corner X coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.DestY">
            <summary>
            The destination rectangle top left corner Y coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.DestWidth">
            <summary>
            The width in points of the destination PDF rectangle where the HTML content will be rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.DestHeight">
            <summary>
            The height in points of the destination PDF rectangle where the HTML content will be rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.TopPadding">
            <summary>
            A padding to insert above the content rendered by this object in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.BottomPadding">
            <summary>
            A padding to insert under the content rendered by this object in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.Cropping">
            <summary>
            Controls is the HTML is cropped at the end of PDF page where it is rendered. This property is false by default and 
            the HTML rendering can continue on the next page if necessary
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.FontEmbedding">
            <summary>
            Controls if the fonts used in HTML are embedded in the PDF document. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.StrictIsoRendering">
            <summary>
            Indicates if the generated PDF document respects strictly the ISO standard.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.HighResolutionGraphics">
            <summary>
            Indicates if the PDF graphics are using high resolution coordinates. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RenderImagesWithTransparency">
            <summary>
            Indicates if the images are rendered with transparency in PDF. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.ScaleImages">
            <summary>
            Indicates if the images can be scaled in PDF. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.DisplayMaskedImages">
            <summary>
            Indicates if the masked images are displayed.
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RepeatTheadAllowed">
            <summary>
            Indicates if the repeating of thead content of a HTML table in PDF is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RepeatTfootAllowed">
            <summary>
            Indicates if the repeating of thead content of a HTML table in PDF is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RepeatTheadStacked">
            <summary>
            Indicates if the thead content of the HTML tables rendered on a PDF page are stacked or displayed at the same level. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RepeatTfootStacked">
            <summary>
            Indicates if the tfoot content of the HTML tables rendered on a PDF page are stacked or displayed at the same level. 
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.HiddenHtmlElements">
            <summary>
            An array of HTML CSS selectors to select the HTML elements which will not be rendered to PDF
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.RenderPostScriptFonts">
            <summary>
            Controls if the PostScript fonts are rendered. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.EnableTableOfContents">
            <summary>
            Controls if the PDF document table of contents is created for the HTML document being converted. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtml.AutoPdfForm">
            <summary>
            The object exposed by this property can be used to control the automatically created PDF form
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfHtmlImage">
            <summary>
            An object of this class can be laid out in any position in a PDF document to render a HTML content as image in place.
            Multiple objects of this type can be laid out in the same PDF page and even overlapped.
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor">
            <summary>
            Creates an empty HTML to Image object. The <see cref="P:HiQPdfClient.PdfHtmlImage.UrlToConvert"/> property or the <see cref="P:HiQPdfClient.PdfHtmlImage.HtmlToConvert"/> property 
            must be set after object creation
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.String)">
            <summary>
            Creates an object to convert the HTML from a given URL to an image and render the resulted image 
            in the top left corner of the PDF page to which this object is added
            </summary>
            <param name="url">The URL to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.String)">
            <summary>
            Creates an object to convert the HTML from a given URL to an image and render the resulted image 
            at the given coordinate in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Creates an object to convert the HTML from a given URL to an image and render the resulted image 
            at the given coordinate and having a given width in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Creates an object to convert the HTML from a given URL to an image and render the resulted image 
            within a given destination box in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="destHeight">The destination box height in points</param>
            <param name="url">The URL of the HTML document to convert</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.String,System.String)">
            <summary>
            Creates an object to convert the given HTML code to an image and render the resulted image 
            in the top left corner of the PDF page to which this object is added
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates an object to convert the given HTML code to an image and render the resulted image 
            at the given coordinate in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates an object to convert the given HTML code to an image and render the resulted image 
            at the given coordinate and having a given width in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlImage.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates an object to convert the HTML from a given URL to an image and render the resulted image 
            within a given destination box in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="destHeight">The destination box height in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.UrlToConvert">
            <summary>
            The URL to convert 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.HtmlToConvert">
            <summary>
            The HTML code to convert 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.BaseUrl">
            <summary>
            The base URL that can be used to resolve the relative URLs found in the HTML code to convert
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.DestX">
            <summary>
            The destination rectangle top left corner X coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.DestY">
            <summary>
            The destination rectangle top left corner Y coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.DestWidth">
            <summary>
            The destination rectangle width in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.DestHeight">
            <summary>
            The destination rectangle height in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.TopPadding">
            <summary>
            A padding to insert above the content rendered by this image object in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.BottomPadding">
            <summary>
            A padding to insert under the content rendered by this image object in a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.Cropping">
            <summary>
            Controls is the HTML is cropped at the end of PDF page where it is rendered. This property is false by default and 
            the HTML rendering can continue on the next page if necessary
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlImage.EnableTableOfContents">
            <summary>
            Controls if the PDF document table of contents is created for the HTML document being converted to image. The default value is true
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfHtmlWithPlaceHolders">
            <summary>
            An object of this class can be laid out in any position in a <see cref="T:HiQPdfClient.PdfRepeatCanvas"/> to render in place HTML content which
            may contain the page numbering place holders {CrtPage} and {PageCount}. The rendering of this type of object can be less efficient
            than the rendering of a regular <see cref="T:HiQPdfClient.PdfHtml"/> object because there will be a HTML to PDF conversion for each PDF page where
            the canvas is repeated
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlWithPlaceHolders.#ctor">
            <summary>
            Creates an empty HTML to PDF object. The <see cref="P:HiQPdfClient.PdfHtml.HtmlToConvert"/> property must be set after object creation
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlWithPlaceHolders.#ctor(System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code in the top left corner of the PDF page to which this object is added
            </summary>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlWithPlaceHolders.#ctor(System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code at the given coordinate in the PDF page to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlWithPlaceHolders.#ctor(System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code at the given coordinate and having a given width in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="M:HiQPdfClient.PdfHtmlWithPlaceHolders.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Creates a HTML to PDF object to render the given HTML code within a given destination box in the PDF page 
            to which this object is added
            </summary>
            <param name="destX">The top left corner X coordinate in points</param>
            <param name="destY">The top left corner Y coordinate in points</param>
            <param name="destWidth">The destination box width in points</param>
            <param name="destHeight">The destination box height in points</param>
            <param name="html">The HTML code to convert</param>
            <param name="baseUrl">The base URL that can be used to resolve the relative URLs found in the HTML code.
            It can be null if there are not relative URLs in the HTML code</param>
        </member>
        <member name="P:HiQPdfClient.PdfHtmlWithPlaceHolders.HtmlToConvert">
            <summary>
            The HTML code with page numbering place holders to convert 
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfImage">
            <summary>
            The PDF image class representing an image that can be added to a PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(System.Single,System.Single,System.String)">
            <summary>
            Constructs a PDF image from the given image file to be laid out at the given coordinate in a PDF canvas
            The destination width in PDF is the available width in canvas
            </summary>
            <param name="destX">The destination X coordinate in points</param>
            <param name="destY">The destination Y coordinate in points</param>
            <param name="file">The full path of the image file</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Constructs a PDF image from the given image file to be laid out at the given coordinate and in the given width in a PDF canvas
            </summary>
            <param name="destX">The destination X coordinate in points</param>
            <param name="destY">The destination Y coordinate in points</param>
            <param name="destWidth">The destination width in points</param>
            <param name="file">The full path of the image file</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Constructs a PDF image from the given image file to be laid out in the given destination rectangle in a PDF canvas.
            The aspect ratio of the image is preserved in PDF
            </summary>
            <param name="destRectangle">The destination rectangle with the dimensions expressed in points</param>
            <param name="file">The full path of the image file</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(HiQPdfClient.RectangleFloat,System.Boolean,System.String)">
            <summary>
            Constructs a PDF image from the given image file to be laid out in the given destination rectangle in a PDF canvas
            </summary>
            <param name="destRectangle">The destination rectangle with the dimensions expressed in points</param>
            <param name="preserveAspectRatio">Controls if the aspect ratio of the image is preserved</param>
            <param name="file">The full path of the image file</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(System.Single,System.Single,System.Byte[])">
            <summary>
            Constructs an image from the given .NET image to be laid out at the given coordinate in a PDF canvas. 
            The destination width in PDF is the available width in canvas
            </summary>
            <param name="destX">The destination X coordinate in points</param>
            <param name="destY">The destination Y coordinate in points</param>
            <param name="imageData">The image data</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(System.Single,System.Single,System.Single,System.Byte[])">
            <summary>
            Constructs an image from the given .NET image to be laid out at the given coordinate and in the given width in a PDF canvas
            </summary>
            <param name="destX">The X location where this element will be rendered</param>
            <param name="destY">The Y location where this element will be rendered</param>
            <param name="destWidth">The destination width in points</param>
            <param name="imageData">The image data</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(HiQPdfClient.RectangleFloat,System.Byte[])">
            <summary>
            Constructs a PDF image from the given .NET image to be laid out in the given destination rectangle in a PDF canvas.
            The aspect ratio of the image is preserved in PDF
            </summary>
            <param name="destRectangle">The destination rectangle with the dimensions expressed in points</param>
            <param name="imageData">The image data</param>
        </member>
        <member name="M:HiQPdfClient.PdfImage.#ctor(HiQPdfClient.RectangleFloat,System.Boolean,System.Byte[])">
            <summary>
            Constructs a PDF image from the given .NET image to be laid out in the given destination rectangle in a PDF canvas
            </summary>
            <param name="destRectangle">The destination rectangle with the dimensions expressed in points</param>
            <param name="preserveAspectRatio">Controls if the aspect ratio of the image is preserved</param>
            <param name="imageData">The image data</param>
        </member>
        <member name="P:HiQPdfClient.PdfImage.DestX">
            <summary>
            The image X location in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.DestY">
            <summary>
            The image Y location in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.DestWidth">
            <summary>
            The image destination width in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.DestHeight">
            <summary>
            The image destination height in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.AlphaBlending">
            <summary>
            Controls if the alpha blending is enabled when drawing this image in PDF. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.Cropping">
            <summary>
            Controls is the image is cropped at the end of PDF page where it is rendered. This property is false by default and 
            the image can continue on the next page if necessary
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.MultiPage">
            <summary>
            Controls if the all the frames in the image are rendered in PDF. This property is true by default
            and each frame in the image is rendered in a new PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.PreserveAspectRatio">
            <summary>
            Controls if the aspect ratio of the image is preserved in PDF. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.CanGrow">
            <summary>
            Controls if the image can grow to fit the destination in PDF. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.ForceNewPdfPages">
            <summary>
            Controls if a new PDF page is always created when the image object is laid out on the next PDF page. By default this property is false and if there is a next
            page already created in PDF document it will be used to layout this object
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImage.ImageData">
            <summary>
            The image data
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfInternalLink">
            <summary>
            An internal link in the PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfInternalLink.#ctor(HiQPdfClient.RectangleFloat,HiQPdfClient.PdfDestination)">
            <summary>
            Creates an internal link object to add to PDF document
            </summary>
            <param name="linkRectangle">The internal link rectangle in PDF page</param>
            <param name="destination">The link destination in PDF document</param>
        </member>
        <member name="P:HiQPdfClient.PdfInternalLink.LinkRectangle">
            <summary>
            The internal link rectangle in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInternalLink.Destination">
            <summary>
            The internal link destination in PDF document
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfJavaScriptAction">
            <summary>
            The JavaScript action class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfJavaScriptAction.#ctor(System.String)">
            <summary>
            Creates a JavaScript action
            </summary>
            <param name="javaScript">The JavaScript code the action will execute</param>
        </member>
        <member name="P:HiQPdfClient.PdfJavaScriptAction.JavaScriptCode">
            <summary>
            The JavaScript code of this action
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfLine">
            <summary>
            The PDF line class representing a line that can be added to a PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfLine.#ctor">
            <summary>
            Constructs an empty PDF line with no size
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfLine.#ctor(HiQPdfClient.PointFloat,HiQPdfClient.PointFloat)">
            <summary>
            Constructs a PDF line between two given points
            </summary>
            <param name="pt1">The first point to connect</param>
            <param name="pt2">The second point to connnect</param>
        </member>
        <member name="P:HiQPdfClient.PdfLine.P1">
            <summary>
            The first point of the line
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfLine.P2">
            <summary>
            The second point of the line
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfLineCapStyle">
            <summary>
            The PDF line cap style
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineCapStyle.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineCapStyle.ButtCap">
            <summary>
            The line is squared off at the endpoint of the path
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineCapStyle.RoundCap">
            <summary>
            A semicircular arc with a diameter equal to the line width is
            drawn around the end of the path and filled in
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineCapStyle.ProjectingSquareCap">
            <summary>
            The line continues beyond the endpoint of the path for a distance equal 
            to half the line width and will be squared off
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfLineDashPattern">
            <summary>
            The patterns of dashes and gaps used to stroke paths
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.Default">
            <summary>
            Default dash pattern
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.Solid">
            <summary>
            Solid pattern
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.Dash">
            <summary>
            Dashed pattern
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.Dot">
            <summary>
            Dotted pattern
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.DashDot">
            <summary>
            Dash dot pattern
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineDashPattern.DashDotDot">
            <summary>
            Dash dot dot pattern
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfLineJoinStyle">
            <summary>
            PDF lines join styles
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineJoinStyle.Default">
            <summary>
            Default join style
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineJoinStyle.MiterJoin">
            <summary>
            The outer edges of the strokes for the two segments are extended until they meet at an angle.
            If the segments meet at too sharp an angle as defined by the miter limit
            parameter, a bevel join is used
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineJoinStyle.RoundJoin">
            <summary>
            An arc of a circle with a diameter equal to the line width is drawn around the point
            where the two segments meet
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfLineJoinStyle.BevelJoin">
            <summary>
            The two segments are finished with caps and the resulting notch beyond the ends of the segments 
            is filled with a triangle
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfLineStyle">
            <summary>
            The PDF line style encapsulating the line width, dash pattern, cap style and join style
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfLineStyle.#ctor">
            <summary>
            Constructs the default line style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfLineStyle.LineWidth">
            <summary>
            The line width in points. The line width is 1 by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfLineStyle.LineCapStyle">
            <summary>
            The line cap style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfLineStyle.LineJoinStyle">
            <summary>
            The line join style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfLineStyle.LineDashPattern">
            <summary>
            The line dash pattern. By default the line pattern is solid
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfMargins">
            <summary>
            The PDF document margins class used by PDF pages
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfMargins.#ctor">
            <summary>
            All margins are 0 points
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfMargins.#ctor(System.Single)">
            <summary>
            All margins have the same size in points
            </summary>
            <param name="margin">Margins size</param>
        </member>
        <member name="M:HiQPdfClient.PdfMargins.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set individual sizes for the left, right, top and bottom margins in points
            </summary>
            <param name="leftMargin">Left margin size in points</param>
            <param name="rightMargin">Right margin size in points</param>
            <param name="topMargin">Top margin size in points</param>
            <param name="bottomMargin">Bottom margin size in points</param>
        </member>
        <member name="P:HiQPdfClient.PdfMargins.Left">
            <summary>
            The left margin in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfMargins.Right">
            <summary>
            The right margin in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfMargins.Top">
            <summary>
            The top margin in points of the PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfMargins.Bottom">
            <summary>
            The bottom margin in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfMargins.Empty">
            <summary>
            The null PDF margins
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfObject">
            <summary>
            A generic base class for PDF objects
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfOutline">
            <summary>
            The PDF outline class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfOutline.#ctor(System.String,HiQPdfClient.PdfDestination)">
            <summary>
            Creates a PDF outline
            </summary>
            <param name="title">The outline title</param>
            <param name="destination">The outline destination</param>
        </member>
        <member name="P:HiQPdfClient.PdfOutline.Title">
            <summary>
            The outline title
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfOutline.TitleColor">
            <summary>
            The outline title color
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfOutline.TitleStyle">
            <summary>
            The outline title style
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfOutline.Destination">
            <summary>
            The outline destination
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfOutline.ParentOutline">
            <summary>
            Gets the parent outline of this outline in the hierarchy of outlines of the PDF document
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfOutlineStyle">
            <summary>
            The outline title style
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfOutlineStyle.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfOutlineStyle.Italic">
            <summary>
            Italic
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfOutlineStyle.Bold">
            <summary>
            Bold
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPage">
            <summary>
            The PDF page class representing a page in a PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Document">
            <summary>
            The parent PDF document of this page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.ExternalPage">
            <summary>
            Indicates if this page was loaded from an external PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Index">
            <summary>
            The index of this page in the parent PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Size">
            <summary>
            The PDF page size in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Orientation">
            <summary>
            The page orientation that can be portrait or landscape
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Rotation">
            <summary>
            The clockwise PDF page rotation
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.Margins">
            <summary>
            The PDF page margins in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.DisplayHeader">
            <summary>
            Controls if the header is displayed on this page. By default, if the document or the page has a header
            then the header is displayed
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPage.DisplayFooter">
            <summary>
            Controls if the footer is displayed on this page. By default, if the document or the page has a footer
            then the footer is displayed
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPage.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Layout the given PDF object in page
            </summary>
            <param name="pdfObject">The PDF object to be laid out</param>
            <returns>The layout information</returns>
        </member>
        <member name="T:HiQPdfClient.PdfPageLayout">
            <summary>
            The page layout to be used when the document is displayed
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageLayout.SinglePage">
            <summary>
            Display one page at a time.
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageLayout.OneColumn">
            <summary>
            Display the pages in one column.
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd numbered pages on the left.
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd numbered pages on the right.
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageMode">
            <summary>
            The page mode to be used when the document is displayed
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.None">
            <summary>
            Neither document outline nor thumbnail images are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.Outlines">
            <summary>
            Document outlines are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.Thumbnails">
            <summary>
            Thumbnail images are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.OptionalContent">
            <summary>
            Optional content group panel is visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.Attachments">
            <summary>
            Document attachments are visible
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageMode.FullScreen">
            <summary>
            Full screen mode
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageOrientation">
            <summary>
            This enumeration represents the possible PDF page orientations
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageOrientation.Portrait">
            <summary>
            Portrait
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageOrientation.Landscape">
            <summary>
            Landscape
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageRegion">
            <summary>
            A region in a PDF document page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.PageIndex">
            <summary>
            The PDF page index of this region
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.X">
            <summary>
            The top left corner X coordinate of the region rectangle within drawable rectangle of the page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.Y">
            <summary>
            The top left corner Y coordinate of the region rectangle within drawable rectangle of the page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.Width">
            <summary>
            The width of the region rectangle within drawable rectangle of the page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.Height">
            <summary>
            The height of the region rectangle within drawable rectangle of the page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRegion.Rectangle">
            <summary>
            The region rectangle within drawable rectangle of the page
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageRotation">
            <summary>
            PDF page rotation
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageRotation.R0">
            <summary>
            Rotate page 0 degrees
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageRotation.R90">
            <summary>
            Rotate page 90 degrees
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageRotation.R180">
            <summary>
            Rotate page 180 degrees
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageRotation.R270">
            <summary>
            Rotate page 270 degrees
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageSize">
            <summary>
            The PDF page size class used to define the standard and custom sizes of a PDF document page
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPageSize.#ctor">
            <summary>
            Constructs the default A4 page size
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPageSize.#ctor(System.Single,System.Single)">
            <summary>
            Constructs a page size with the given width and height
            </summary>
            <param name="width">The page width in points</param>
            <param name="height">The page height in points</param>
        </member>
        <member name="P:HiQPdfClient.PdfPageSize.Width">
            <summary>
            The page width in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageSize.Height">
            <summary>
            The page height in points
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A0">
            <summary>
            The A0 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A1">
            <summary>
            The A1 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A2">
            <summary>
            The A2 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A3">
            <summary>
            The A3 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A4">
            <summary>
            The A4 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A5">
            <summary>
            The A5 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A6">
            <summary>
            The A6 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A7">
            <summary>
            The A7 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A8">
            <summary>
            The A8 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A9">
            <summary>
            The A9 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.A10">
            <summary>
            The A10 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B0">
            <summary>
            The B0 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B1">
            <summary>
            The B1 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B2">
            <summary>
            The B2 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B3">
            <summary>
            The B3 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B4">
            <summary>
            The B4 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.B5">
            <summary>
            The B5 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.ArchE">
            <summary>
            The ArchE PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.ArchD">
            <summary>
            The ArchD PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.ArchC">
            <summary>
            The ArchC PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.ArchB">
            <summary>
            The ArchB PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.ArchA">
            <summary>
            The ArchA PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Flsa">
            <summary>
            The Flsa PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Letter">
            <summary>
            The Letter PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Note">
            <summary>
            The Note PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Legal">
            <summary>
            The Legal PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.HalfLetter">
            <summary>
            The HalfLetter PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Letter11x17">
            <summary>
            The 11x17 PDF page size object
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfPageSize.Ledger">
            <summary>
            The Ledger PDF page size object
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPath">
            <summary>
            The PDF path class representing a graphic path that can be added to a PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPath.#ctor(HiQPdfClient.PointFloat)">
            <summary>
            Constructs a PDF path
            </summary>
            <param name="start">The path start point</param>
        </member>
        <member name="P:HiQPdfClient.PdfPath.AutoClosePath">
            <summary>
            Controls is the path will be automatically closed before rendering. This property is false by default
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPath.AddBezierCurve(HiQPdfClient.PointFloat,HiQPdfClient.PointFloat,HiQPdfClient.PointFloat)">
            <summary>
            Add a Bezier curve segment to path
            </summary>
            <param name="start">Point 1 of Bezier curve segment</param>
            <param name="direction">Point 2 of Bezier curve segment</param>
            <param name="end">Point 3 of Bezier curve segment</param>
        </member>
        <member name="M:HiQPdfClient.PdfPath.AddLine(HiQPdfClient.PointFloat)">
            <summary>
            Add a line segment to path
            </summary>
            <param name="end">The line segment end point</param>
        </member>
        <member name="T:HiQPdfClient.PdfPolygon">
            <summary>
            The PDF polygon class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPolygon.#ctor(HiQPdfClient.PointFloat[])">
            <summary>
            Constructs a PDF polygon with the given points
            </summary>
            <param name="points">The polygon points</param>
        </member>
        <member name="P:HiQPdfClient.PdfPolygon.Points">
            <summary>
            The polygon points
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfProperties">
            <summary>
            Controls the title, subject, keywords, author and the creation date of the PDF document generated by converter
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfProperties.Author">
            <summary>
            The PDF document author
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfProperties.CreationDate">
            <summary>
            The PDF document creation date
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfProperties.Keywords">
            <summary>
            The PDF document keywords
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfProperties.Subject">
            <summary>
            The PDF document subject
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfProperties.Title">
            <summary>
            The PDF document title
            </summary>
        </member>
        <member name="T:HiQPdfClient.ExtractedPdfImage">
            <summary>
            The image extracted from a PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.ExtractedPdfImage.ImageData">
            <summary>
            The data of the extracted image in PNG format
            </summary>
        </member>
        <member name="P:HiQPdfClient.ExtractedPdfImage.PdfPageNumber">
            <summary>
            The source PDF page number of the extracted image
            </summary>
        </member>
        <member name="M:HiQPdfClient.ExtractedPdfImage.Dispose(System.Boolean)">
            <summary>
            Dispose the extracted image
            </summary>
            <param name="disposing">Controls if the managed resources should be disposed or not</param>
        </member>
        <member name="M:HiQPdfClient.ExtractedPdfImage.Dispose">
            <summary>
            Call this method to dispose the extracted image
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfImageExtractedDelegate">
            <summary>
            Delegate for <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event raised after an image has been extracted from a PDF document
            </summary>
            <param name="eventParams">Event parameters</param>
        </member>
        <member name="T:HiQPdfClient.PdfImageExtractedParams">
            <summary>
            <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event parameters
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImageExtractedParams.ExtractedPdfImage">
            <summary>
            The PDF image extracted from document. You have to dispose the extracted image when it is no longer necessary
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfImagesExtract">
            <summary>
            This class helps you to extract the images from a PDF document
            </summary>
        </member>
        <member name="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent">
            <summary>
            The event is raised after an image has been extracted from PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.#ctor(System.String)">
            <summary>
            Creates a PDF images extractor to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a PDF images extractor to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.Server">
            <summary>
            The server IP address or host name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.ServerPassword">
            <summary>
            The password to access the server if the server is password protected
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.MaxRunTime">
            <summary>
            The maximum time to run the images extraction
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.UserPassword">
            <summary>
            The password to open the PDF document in user mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.OwnerPassword">
            <summary>
            The password to open the PDF document in owner mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.SerialNumber">
            <summary>
            The serial number obtained after product purchase. This property can be set to null or can be left not set to enter evaluation mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.PdfInfo">
            <summary>
            The PDF document info dictionary retrieved after the images extraction ended
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfImagesExtract.TransparentImages">
            <summary>
            Controls if the extracted images will have transparency information or not. This property is true by default
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.PdfPageCount(System.String)">
            <summary>
            Call this method to get the page count of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.PdfPageCount(System.IO.Stream)">
            <summary>
            Call this method to get the page count of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.PdfPageCount(System.Byte[])">
            <summary>
            Call this method to get the page count of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.String)">
            <summary>
            Call this method to extract the images from a PDF file and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.IO.Stream)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.Byte[])">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.String,System.Int32)">
            <summary>
            Call this method to extract the images from a PDF file starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.Byte[],System.Int32)">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF file and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPagePageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a stream
            and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPagePageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.RaiseImageExtractedEvent(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a memory buffer 
            and raise the <see cref="E:HiQPdfClient.PdfImagesExtract.PdfImageExtractedEvent"/> event
            after an image has been extracted from PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPagePageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.String,System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF file to image files
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.IO.Stream,System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream to image files
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.Byte[],System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer to image files
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="outputDirectory">The output directory</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.String,System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF file to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF file to image files
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.IO.Stream,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a stream to image files
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageFiles(System.Byte[],System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a memory buffer to image files
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.String)">
            <summary>
            Call this method to extract the images from a PDF file to image objects
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.IO.Stream)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream to image objects
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.Byte[])">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer to image objects
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.String,System.Int32)">
            <summary>
             Call this method to extract the images from a PDF file to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to extract the images from a PDF document contained in a stream to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.Byte[],System.Int32)">
            <summary>
            Call this method to extract the images from a PDF document contained in a memory buffer to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF file to image objects
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a stream to image objects
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfImagesExtract.ExtractToImageObjects(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to extract the images from a range of pages of a PDF document contained in a memory buffer to image objects
            </summary>
            <param name="pdfBuffer">The memory buffer containing the PDF document from which to extract the images</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="T:HiQPdfClient.PdfInfo">
            <summary>
            The Info dictionary of a PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Title">
            <summary>
            The PDF document title
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Subject">
            <summary>
            The PDF document subject
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Keywords">
            <summary>
            The PDF document keywords
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Author">
            <summary>
            The PDF document author
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Creator">
            <summary>
            The PDF document creator
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.Producer">
            <summary>
            The PDF document producer
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.CreationDate">
            <summary>
            The PDF document creation date
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.LastModificationDate">
            <summary>
            The PDF document last modification date
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfInfo.PdfPageCount">
            <summary>
            The PDF document page count
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageConvertedToHtmlDelegate">
            <summary>
            Delegate for <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event raised after a PDF page has been converted to HTML
            </summary>
            <param name="eventParams">Event parameters</param>
        </member>
        <member name="T:HiQPdfClient.PdfPageConvertedToHtmlParams">
            <summary>
            <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event parameters    
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageConvertedToHtmlParams.PdfPageHtmlCode">
            <summary>
            The HTML code resulted after PDF page conversion
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageHtmlCode">
            <summary>
            The HTML code resulted after conversion of a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageHtmlCode.HtmlCode">
            <summary>
            The HTML code resulted after PDF page conversion
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageHtmlCode.PdfPageNumber">
            <summary>
            The number of the PDF page which produced this HTML code
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPageHtmlCode.Dispose(System.Boolean)">
            <summary>
            Dispose the HTML code resulted after PDF page conversion
            </summary>
            <param name="disposing">Controls if the managed resources should be disposed or not</param>
        </member>
        <member name="M:HiQPdfClient.PdfPageHtmlCode.Dispose">
            <summary>
            Call this method to dispose HTML code resulted after PDF page conversion
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageRasterImage">
            <summary>
            The image resulted after rasterization of a PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRasterImage.ImageData">
            <summary>
            The data of raster image of a PDF page in PNG format
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRasterImage.PdfPageNumber">
            <summary>
            The source PDF page number of the extracted image
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfPageRasterImage.Dispose(System.Boolean)">
            <summary>
            Dispose the raster image of a PDF page
            </summary>
            <param name="disposing">Controls if the managed resources should be disposed or not</param>
        </member>
        <member name="M:HiQPdfClient.PdfPageRasterImage.Dispose">
            <summary>
            Call this method to dispose the raster image of a PDF page
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfPageRasterizedDelegate">
            <summary>
            Delegate for <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event raised after a PDF page has been rasterized
            </summary>
            <param name="eventParams">Event parameters</param>
        </member>
        <member name="T:HiQPdfClient.PdfPageRasterizedParams">
            <summary>
            <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event parameters    
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfPageRasterizedParams.PdfPageRasterImage">
            <summary>
            The raster image of a PDF page. You have to dispose the image when it is no longer necessary
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfRasterizer">
            <summary>
            This class helps you to rasterize the pages of PDF document to images
            </summary>
        </member>
        <member name="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent">
            <summary>
            The event is raised after a PDF page has been rasterized
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.#ctor(System.String)">
            <summary>
            Creates a PDF to Image converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a PDF to Image converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.Server">
            <summary>
            The server IP address or host name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.ServerPassword">
            <summary>
            The password to access the server if the server is password protected
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.MaxRunTime">
            <summary>
            The maximum time to run the PDF pages rasterization
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.UserPassword">
            <summary>
            The password to open the PDF document in user mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.OwnerPassword">
            <summary>
            The password to open the PDF document in owner mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.SerialNumber">
            <summary>
            The serial number obtained after product purchase. This property can be set to null or can be left not set to enter evaluation mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.PdfInfo">
            <summary>
            Gets the object encapsulating the PDF document properties. This objects is populated after 
            tool execution finished
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.ColorSpace">
            <summary>
            The color space of the raster images
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRasterizer.DPI">
            <summary>
            The rasterization resolution
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.PdfPageCount(System.String)">
            <summary>
            Call this method to get the page count of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.PdfPageCount(System.IO.Stream)">
            <summary>
            Call this method to get the page count of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.PdfPageCount(System.Byte[])">
            <summary>
            Call this method to get the page count of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.IO.Stream)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfStream">The PDF document stream</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.Byte[])">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.String,System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF file starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.Byte[],System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF file and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RaisePageRasterizedEvent(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a memory buffer 
            and raise the <see cref="E:HiQPdfClient.PdfRasterizer.PdfPageRasterizedEvent"/> event
            after a PDF page has been rasterized
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.String,System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to image files
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.IO.Stream,System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to image files
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.Byte[],System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to image files
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="outputDirectory">The output directory</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.String,System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to image files starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF file to image files
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.IO.Stream,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream to image files
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageFiles(System.Byte[],System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a memory buffer to image files
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output image file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.String,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to a multipage TIFF image file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.IO.Stream,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to a multipage TIFF image file
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.Byte[],System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to a multipage TIFF image file
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.String,System.Int32,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to a multipage TIFF image file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.IO.Stream,System.Int32,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to a multipage TIFF image file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.Byte[],System.Int32,System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to a multipage TIFF image file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF file to a multipage TIFF image file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.IO.Stream,System.Int32,System.Int32,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream to a multipage TIFF image file
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiffFile(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a memory buffer to a multipage TIFF image file
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputFileName">The output TIFF image file name</param>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to image objects
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.IO.Stream)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to image objects
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.Byte[])">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to image objects
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.String,System.Int32)">
            <summary>
             Call this method to rasterize the pages of a PDF file to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.Byte[],System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to image objects starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF file to image objects
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream to image objects
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToImageObjects(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a memory buffer to image objects
            </summary>
            <param name="pdfBuffer">The memory buffer containing the PDF document from which to extract the images</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of image objects that you have to dispose when when they are no longer necessary</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.String)">
            <summary>
            Call this method to rasterize the pages of a PDF file to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.IO.Stream)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.Byte[])">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.String,System.Int32)">
            <summary>
             Call this method to rasterize the pages of a PDF file to a multipage TIFF image in a data buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a stream to a multipage TIFF image in a data buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.Byte[],System.Int32)">
            <summary>
            Call this method to rasterize the pages of a PDF document contained in a memory buffer to a multipage TIFF image in a data buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF file to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="M:HiQPdfClient.PdfRasterizer.RasterizeToTiff(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a memory buffer to a multipage TIFF image in a data buffer
            </summary>
            <param name="pdfBuffer">The memory buffer containing the PDF document from which to extract the images</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The TIFF image data</returns>
        </member>
        <member name="T:HiQPdfClient.PdfTextExtract">
            <summary>
            This class helps you to extract the text from PDF documents and to search text in PDF documents
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextExtract.PageBreakChar">
            <summary>
            The character to mark the page breaks in the extracted text
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.#ctor(System.String)">
            <summary>
            Creates a PDF to Text converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a PDF to Text converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.Server">
            <summary>
            The server IP address or host name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.ServerPassword">
            <summary>
            The password to access the server if the server is password protected
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.MaxRunTime">
            <summary>
            The maximum time to run the PDF text extraction
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.TextExtractMode">
            <summary>
            The text extraction mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.PageBreaksEnabled">
            <summary>
            Controls if a special character is inserted in the extracted text to mark the page breaks from the source PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.UserPassword">
            <summary>
            The password to open the PDF document in user mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.OwnerPassword">
            <summary>
            The password to open the PDF document in owner mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.SerialNumber">
            <summary>
            The serial number obtained after product purchase. This property can be set to null or can be left not set to enter evaluation mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextExtract.PdfInfo">
            <summary>
            Gets the object encapsulating the PDF document properties. This objects is populated after 
            tool execution finished
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.String)">
            <summary>
            Call this method to extract the text from a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.String,System.Int32)">
            <summary>
             Call this method to extract the text from a PDF file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the text from a range of pages of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.IO.Stream)">
            <summary>
            Call this method to extract the text from a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to extract the text from a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to extract the text from a range of pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.Byte[])">
            <summary>
            Call this method to extract the text from a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.Byte[],System.Int32)">
            <summary>
            Call this method to extract the text from a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.ExtractText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to extract the text from a range of pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The memory buffer containing the PDF document from which to extract the images</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>The extracted text</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.PdfPageCount(System.String)">
            <summary>
            Call this method to get the page count of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.PdfPageCount(System.IO.Stream)">
            <summary>
            Call this method to get the page count of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.PdfPageCount(System.Byte[])">
            <summary>
            Call this method to get the page count of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search a text in a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="text">The text to search</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search a text in a PDF file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method search a text in a range of pages of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search a text in a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="text">The text to search</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.IO.Stream,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search a text in a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.IO.Stream,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search a text in a range of pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.Byte[],System.String,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search text in a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="text">The text to search</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.Byte[],System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search text in a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="M:HiQPdfClient.PdfTextExtract.SearchText(System.Byte[],System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Call this method to search text in a range of pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="text">The text to search</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="matchCase">Controls if the search should match case</param>
            <param name="matchWholeWord">Controls if the search should match whole words</param>
            <returns>An array containing the searched text instances in PDF document</returns>
        </member>
        <member name="T:HiQPdfClient.PdfTextExtractMode">
            <summary>
            The text extraction modes
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextExtractMode.KeepPositioning">
            <summary>
            The text extraction keeps the positioning of the text in PDF document
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextExtractMode.KeepReadingOrder">
            <summary>
            The text extraction kees the reading order of the text in PDF document
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextSearchItem">
            <summary>
            An item in the PDF text search result
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextSearchItem.PdfPageNumber">
            <summary>
            The number of the PDF page where the text instance was found
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextSearchItem.BoundingRectangle">
            <summary>
            The bounding rectangle of the searched text instance in PDF page
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfToHtml">
            <summary>
            This class helps you to convert the pages of PDF document to HTML documents
            </summary>
        </member>
        <member name="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent">
            <summary>
            The event is raised after a PDF page has been converted to HTML
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.#ctor(System.String)">
            <summary>
            Creates a PDF to HTML converter to connect on default port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.#ctor(System.String,System.UInt32)">
            <summary>
            Creates a PDF to HTML converter to connect on the given port to a server given by IP address or by host name
            </summary>
            <param name="server">The IP address or host name of the server</param>
            <param name="port">The port number of the server</param>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.Server">
            <summary>
            The server IP address or host name
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.Port">
            <summary>
            The server port number
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.ServerPassword">
            <summary>
            The password to access the server if the server is password protected
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.MaxRunTime">
            <summary>
            The maximum time to run the PDF pages conversion to HTML
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.UserPassword">
            <summary>
            The password to open the PDF document in user mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.OwnerPassword">
            <summary>
            The password to open the PDF document in owner mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.SerialNumber">
            <summary>
            The serial number obtained after product purchase. This property can be set to null or can be left not set to enter evaluation mode
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.UserImpersonation">
            <summary>
            The impersonation options used during tool execution
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.PdfInfo">
            <summary>
            Gets the object encapsulating the PDF document properties. This objects is populated after 
            tool execution finished
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.CreateHtmlPagesIndex">
            <summary>
            Controls if a HTML index file will be created for the HTML files resulted after conversion. The default value is true
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.DPI">
            <summary>
            The PDF to HTML conversion dpi. The default value is 150
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfToHtml.Zoom">
            <summary>
            The zoom level of the HTML document resulted after conversion. The default value is 100
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.PdfPageCount(System.String)">
            <summary>
            Call this method to get the page count of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.PdfPageCount(System.IO.Stream)">
            <summary>
            Call this method to get the page count of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.PdfPageCount(System.Byte[])">
            <summary>
            Call this method to get the page count of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>The PDF document page count</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.String)">
            <summary>
            Call this method to convert to HTML the pages of a PDF file and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.IO.Stream)">
            <summary>
            Call this method to convert to HTML the pages of a PDF document contained in a stream and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfStream">The PDF document stream</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.Byte[])">
            <summary>
            Call this method to convert to HTML the pages of a PDF document contained in a memory buffer and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.String,System.Int32)">
            <summary>
            Call this method to convert to HTML the pages of a PDF file starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to convert to HTML the pages of a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.Byte[],System.Int32)">
            <summary>
            Call this method to convert to HTML the pages of a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to convert to HTML a range of pages of a PDF file and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to rasterize a range of pages of a PDF document contained in a stream and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted HTML
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.RaisePageConvertedToHtmlEvent(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to convert to HTML a range of pages of a PDF document contained in a memory buffer 
            and raise the <see cref="E:HiQPdfClient.PdfToHtml.PdfPageConvertedToHtmlEvent"/> event
            after a PDF page has been converted
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.String,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.IO.Stream,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.Byte[],System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.String,System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.IO.Stream,System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files the pages of a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files a range of pages of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.IO.Stream,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files a range of pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtmlFiles(System.Byte[],System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Call this method to convert to HTML files a range of pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <param name="outputDirectory">The output folder</param>
            <param name="outputFileName">The output HTML file name without extension</param>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.String)">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF file 
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.IO.Stream)">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.Byte[])">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.String,System.Int32)">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF file starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.IO.Stream,System.Int32)">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF document contained in a stream starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.Byte[],System.Int32)">
            <summary>
            Call this method to convert to HTML objects the pages of a PDF document contained in a memory buffer starting from a PDF page number to the end of the PDF document
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.String,System.Int32,System.Int32)">
            <summary>
            Call this method to convert to HTML objects a range of pages of a PDF file
            </summary>
            <param name="pdfFile">The fully qualified name of the PDF file</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Call this method to convert to HTML objects a range of pages of a PDF document contained in a stream
            </summary>
            <param name="pdfStream">The PDF document stream</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="M:HiQPdfClient.PdfToHtml.ConvertToHtml(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Call this method to convert to HTML objects a range of pages of a PDF document contained in a memory buffer
            </summary>
            <param name="pdfBuffer">The PDF document memory buffer</param>
            <param name="firstPdfPageNumber">The first PDF page number</param>
            <param name="lastPdfPageNumber">The last PDF page number</param>
            <returns>An array of objects containing the resulted HTML code after conversion</returns>
        </member>
        <member name="T:HiQPdfClient.RasterImageColorSpace">
            <summary>
            The raster images color space
            </summary>
        </member>
        <member name="F:HiQPdfClient.RasterImageColorSpace.Rgb">
            <summary>
            RGB image
            </summary>
        </member>
        <member name="F:HiQPdfClient.RasterImageColorSpace.BlackWhite">
            <summary>
            Mono black and white image
            </summary>
        </member>
        <member name="F:HiQPdfClient.RasterImageColorSpace.GrayScale">
            <summary>
            Gray scale image
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfReadingOrder">
            <summary>
            The reading order when the document is displayed 
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfReadingOrder.LeftToRight">
            <summary>
            Left to right
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfReadingOrder.RightToLeft">
            <summary>
            Right to left
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfRectangle">
            <summary>
            The PDF rectangle class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfRectangle.#ctor">
            <summary>
            Constructs an empty rectangle
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfRectangle.#ctor(HiQPdfClient.RectangleFloat)">
            <summary>
            Constructs a PDF rectangle based on the given .NET rectangle
            </summary>
            <param name="rectangle">The rectangle with the dimensions expressed in points</param>
        </member>
        <member name="M:HiQPdfClient.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructs a PDF rectangle with the given top left corner coordinates and the given width and height
            </summary>
            <param name="x">The top left corner X coordinate in points</param>
            <param name="y">The top left corner Y coordinate in points</param>
            <param name="width">Rectangle width in points</param>
            <param name="height">Rectangle height in points</param>
        </member>
        <member name="P:HiQPdfClient.PdfRectangle.X">
            <summary>
            The top left corner X coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRectangle.Y">
            <summary>
            The top left corner Y coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRectangle.Width">
            <summary>
            The rectangle width in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRectangle.Height">
            <summary>
            The rectangle height in points
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfRepeatCanvas">
            <summary>
            This canvas is automatically laid out in the same position on each PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.X">
            <summary>
            Gets the canvas X location in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.Y">
            <summary>
            Gets the canvas Y location in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.Width">
            <summary>
            Gets the canvas width in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.Height">
            <summary>
            Gets the canvas height in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.Rectangle">
            <summary>
            The bounding rectangle of this canvas, the same in each PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.DockingMode">
            <summary>
            Controls the docking mode of the canvas in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.AnchoringMode">
            <summary>
            Controls the anchoring mode of the canvas in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.RepeatInFirstPage">
            <summary>
            Controls if the canvas is repeated in the first page of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.RepeatInEvenPages">
            <summary>
            Controls if the canvas is repeated in even pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.RepeatInOddPages">
            <summary>
            Controls if the canvas is repeated in odd pages of the PDF document. By default is repeated on all pages
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.FirstPageNumber">
            <summary>
            Controls the number of the first page in page numbering control
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.AdjustPageCount">
            <summary>
            Can be used to adjust the total number of pages in page numbering control
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfRepeatCanvas.RepeatInBackground">
            <summary>
            Controls if the canvas is repeated in back of the page content. By default the canvas is rendered in the front of the main content
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfRepeatCanvas.Layout(HiQPdfClient.PdfObject)">
            <summary>
            Layout the PDF object given as parameter in this repeated canvas
            </summary>
            <param name="pdfObject">The PDF object to be laid out</param>
            <returns>The layout information</returns>
        </member>
        <member name="T:HiQPdfClient.PdfResetFormAction">
            <summary>
            Encapsulates the Reset form action options
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfResetFormAction.#ctor">
            <summary>
            Constructs a PDF form reset action
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfResetFormAction.IncludeFields">
            <summary>
            Controls if the <see cref="P:HiQPdfClient.PdfResetFormAction.Fields"/> property defines the fields to be included or the fields to be excluded from reset.
            By default this property is true and the <see cref="P:HiQPdfClient.PdfResetFormAction.Fields"/> property defines the list of fields to to be included in reset
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfResetFormAction.Fields">
            <summary>
            The list of fields to be included or excluded from reset function of <see cref="P:HiQPdfClient.PdfResetFormAction.IncludeFields"/> property value.
            If there are no fields added to this array and <see cref="P:HiQPdfClient.PdfResetFormAction.IncludeFields"/> property is true then all the fields are reset
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfSecurity">
            <summary>
            Controls the security attributes of the generated PDF document
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.EncryptionLevel">
            <summary>
            Controls the encryption level. The encryption is High by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.EncryptionMode">
            <summary>
            Controls the encryption mode which can be RC4 or AES. The encryption mode is RC4 by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.PermissionsPassword">
            <summary>
            Controls the password to open the PDF document as owner. The owner has the right to open the document 
            and to change the PDF document permissions in a PDF editor
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.OpenPassword">
            <summary>
            Controls the password to open the PDF document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowPrinting">
            <summary>
            Controls if printing the PDF document is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowAssembling">
            <summary>
            Controls if the assembling operations are allowed for the generated PDF document when the document is strongly encrypted. 
            Assembling operations are insert, rotate or delete pages and create bookmarks or thumbnail images.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowCopyContent">
            <summary>
            Controls if copying or extracting text and graphics from the document is allowed.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowEditAnnotations">
            <summary>
            Controls if it is allowed to add or modify title annotations or to fill in interactive form fields.
            If both this property and <see cref="P:HiQPdfClient.PdfSecurity.AllowEditContent"/> are true then it is also allowed create 
            or modify interactive form fields (including signature fields).
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowEditContent">
            <summary>
            Controls if it is allowed to modify the contents of the document by operations other than those controlled by 
            <see cref="P:HiQPdfClient.PdfSecurity.AllowEditAnnotations"/> and <see cref="P:HiQPdfClient.PdfSecurity.AllowFormFilling"/>.
            This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowFormFilling">
            <summary>
            If this property is true then it is allowed to fill the PDF form even if <see cref="P:HiQPdfClient.PdfSecurity.AllowEditAnnotations"/> is false. 
            When this property, <see cref="P:HiQPdfClient.PdfSecurity.AllowEditContent"/> and 
            <see cref="P:HiQPdfClient.PdfSecurity.AllowEditAnnotations"/> are false the form filling is not allowed.
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowHighResolutionPrinting">
            <summary>
            Controls if printing the PDF document in high resolution is allowed. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSecurity.AllowCopyAccessibilityContent">
            <summary>
            Controls if copying or extracting title and graphics for accessibility from the document is allowed.
            This property is true by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfStandard">
            <summary>
            The PDF standard used to generate the document
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandard.Pdf">
            <summary>
            The created PDF document will be conform to PDF standard
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandard.PdfA">
            <summary>
            The created PDF document will be conform to PDF/A-1b standard
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandard.PdfX">
            <summary>
            The created PDF document will be conform to PDF/X-1a standard 
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfStandardFont">
            <summary>
            PDF standard Type 1 fonts recognized by any PDF viewer
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.Default">
            <summary>
            Default standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.TimesRoman">
            <summary>
            TimesRoman standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.Helvetica">
            <summary>
            Helvetica standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.Courier">
            <summary>
            Courier standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.Symbol">
            <summary>
            Symbol standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.TimesBold">
            <summary>
            TimesBold standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.HelveticaBold">
            <summary>
            HelveticaBold standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.CourierBold">
            <summary>
            CourierBold standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.ZapfDingbats">
            <summary>
            ZapfDingbats standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.TimesItalic">
            <summary>
            TimesItalic standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.HelveticaOblique">
            <summary>
            HelveticaOblique standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.CourierOblique">
            <summary>
            CourierOblique standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.TimesBoldItalic">
            <summary>
            TimesBoldItalic standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.HelveticaBoldOblique">
            <summary>
            HelveticaBoldOblique standard font
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfStandardFont.CourierBoldOblique">
            <summary>
            CourierBoldOblique standard font
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfSubmitFormAction">
            <summary>
            Encapsulates the Submit form action options
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfSubmitFormAction.#ctor(System.String)">
            <summary>
            Constructs a PDF form submit action
            </summary>
            <param name="url">The URL of the script at the Web server that will process the submission</param>
        </member>
        <member name="P:HiQPdfClient.PdfSubmitFormAction.Url">
            <summary>
            The URL of the script at the Web server that will process the submission
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSubmitFormAction.Flags">
            <summary>
            A biwise OR of flags specifying various characteristics of the action
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSubmitFormAction.IncludeFields">
            <summary>
            Controls if the <see cref="P:HiQPdfClient.PdfSubmitFormAction.Fields"/> property defines the fields to be included or the fields to be excluded from submit.
            By default this property is true and the <see cref="P:HiQPdfClient.PdfSubmitFormAction.Fields"/> property defines the list of fields to to be included in submit
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfSubmitFormAction.Fields">
            <summary>
            The list of fields to be included or excluded from submit function of <see cref="P:HiQPdfClient.PdfSubmitFormAction.IncludeFields"/> property value.
            If there are no fields added to this array and <see cref="P:HiQPdfClient.PdfSubmitFormAction.IncludeFields"/> property is true then all the fields are submitted
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTableOfContents">
            <summary>
            Controls the automatic creation of the table of contents for the converted HTML document 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TocEntriesForHeadingTags">
            <summary>
            Controls if the heading tags H1, H2, H3, H4, H5, H6 are automatically added a entries into the table of contents. This property is false by default 
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.MaxTextChars">
            <summary>
            The maximum number of characters of the table of contents entry text. By default there is no limit
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.AddPageNumbers">
            <summary>
            Controls if the table of contents entries will have page numbers. This property is true by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TableTitle">
            <summary>
            The table of contents title
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TableTitleStyle">
            <summary>
            The table of contents title style can be set as a regular CSS style, for example "color:red; background-color:green"
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TableStyle">
            <summary>
            The style of the table of contents. For example, you can change the table of contents background color if you set this property
            with "body { background-color:green }"
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfTableOfContents.SetTocEntryStyle(System.Int32,System.String)">
            <summary>
            Call this method to set the table of contents entry CSS style for a level
            </summary>
            <param name="tocEntryLevel">The table of contents entry level</param>
            <param name="tocEntryStyle">The table of contents entry CSS style</param>
        </member>
        <member name="M:HiQPdfClient.PdfTableOfContents.SetPageNumberStyle(System.Int32,System.String)">
            <summary>
            Call this method to set the CSS style of the page numbers for a level in table of contents
            </summary>
            <param name="tocEntryLevel">The table of contents entry level</param>
            <param name="pageNumberStyle">The page numbers CSS style for the given level</param>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TableWidth">
            <summary>
            The table of contents width in pixels
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.DisplayHeader">
            <summary>
            Controls if the header is displayed on the table of content pages. The header is displayed by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.DisplayFooter">
            <summary>
            Controls if the footer is displayed on the table of content pages. The footer is displayed by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.ExclusivePageNumbering">
            <summary>
            Controls if the page numbering in table of contents excludes the table of contents pages. By default this property is false
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.FirstPageIndex">
            <summary>
            The index considered for the first page in PDF document when numbering the pages in table of contents. This property can be used to alter the page numbers in
            table of contents with a constant value. By default this property is 0
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TablePageIndex">
            <summary>
            The index in document of the PDF page where the table of contents is rendered
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.TablePageCount">
            <summary>
            The number of PDF pages used by table of contents
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTableOfContents.BackgroundColor">
            <summary>
            The table of contents background color
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfText">
            <summary>
            The PDF text class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfText.#ctor(System.Single,System.Single,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Constructs a text object to be laid out at a given coordinate
            </summary>
            <param name="destX">The text X coordinate in points</param>
            <param name="destY">The text Y coordinate in points</param>
            <param name="text">The text to render</param>
            <param name="font">A font previously added to document</param>
        </member>
        <member name="M:HiQPdfClient.PdfText.#ctor(System.Single,System.Single,System.Single,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Constructs a text object to be laid out at a given coordinate and having a given width in PDF
            </summary>
            <param name="destX">The text X coordinate in points</param>
            <param name="destY">The text Y coordinate in points</param>
            <param name="destWidth">The output box width in PDF expressed in points</param>
            <param name="text">The text to render</param>
            <param name="font">A font previously added to document</param>
        </member>
        <member name="M:HiQPdfClient.PdfText.#ctor(System.Single,System.Single,System.Single,System.Single,System.String,HiQPdfClient.PdfFont)">
            <summary>
            Constructs a text object to be laid out at a given coordinate and having a given width in PDF
            </summary>
            <param name="destX">The text X coordinate in points</param>
            <param name="destY">The text Y coordinate in points</param>
            <param name="destWidth">The output box width in PDF expressed in points</param>
            <param name="destHeight">The output box height in PDF expressed in points</param>
            <param name="text">The text to render</param>
            <param name="font">A font previously added to document</param>
        </member>
        <member name="P:HiQPdfClient.PdfText.Text">
            <summary>
            The text to be laid out
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.TextFont">
            <summary>
            The text PDF font
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.EmbedSystemFont">
            <summary>
            Controls if the .NET font given in the constructor should be embedded in the PDF document.
            By default the font is embedded if necessary
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.DestX">
            <summary>
            The destination rectangle top left corner X coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.DestY">
            <summary>
            The destination rectangle top left corner Y coordinate in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.DestWidth">
            <summary>
            The destination rectangle width in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.DestHeight">
            <summary>
            The destination rectangle height in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.HorizontalAlign">
            <summary>
            The horizontal alignment of the text
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.VerticalAlign">
            <summary>
            The vertical alignment of the text
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.Order">
            <summary>
            The text order
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.CharSpacing">
            <summary>
            The spacing between characters in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.WordSpacing">
            <summary>
            The spacing between words in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.LineSpacing">
            <summary>
            The spacing between lines in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.Rise">
            <summary>
            The text rise in points
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.RotationAngle">
            <summary>
            The text counter-clockwise rotation angle
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfText.Cropping">
            <summary>
            Controls if the text is cropped at the end of PDF page where it is rendered. This property is false by default and 
            the text can continue on the next page if necessary
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextHAlign">
            <summary>
            The horizontal alignments that can be used to align the text in PDF
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextHAlign.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextHAlign.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextHAlign.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextHAlign.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextHAlign.Justify">
            <summary>
            Justify
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextNote">
            <summary>
            The PDF text note class
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfTextNote.#ctor(HiQPdfClient.PointFloat,System.String)">
            <summary>
            Creates a text note
            </summary>
            <param name="noteLocation">The note location in PDF page</param>
            <param name="noteText">The note text</param>
        </member>
        <member name="P:HiQPdfClient.PdfTextNote.NoteRectangle">
            <summary>
            The text note rectangle in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextNote.NoteText">
            <summary>
            The note text
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextNote.IsOpen">
            <summary>
            Controls if the note should be opened by default when displayed in PDF. This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfTextNote.IconType">
            <summary>
            Gets or sets text note icon in PDF document. This property is Note type by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextNoteIconType">
            <summary>
            The PDF text note icon type
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Help">
            <summary>
            Help
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Insert">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.NewParagraph">
            <summary>
            NewParagraph
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextNoteIconType.Paragraph">
            <summary>
            Paragraph
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextOrder">
            <summary>
            The order of the text in the PDF documents created by library
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextOrder.LeftToRight">
            <summary>
            Left to right text
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextOrder.RightToLeft">
            <summary>
            Right to left text
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfTextVAlign">
            <summary>
            The vertical alignments that can be used to align the text in PDF
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextVAlign.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextVAlign.Middle">
            <summary>
            Middle
            </summary>
        </member>
        <member name="F:HiQPdfClient.PdfTextVAlign.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfUrlLink">
            <summary>
            A link to an URL in PDF document
            </summary>
        </member>
        <member name="M:HiQPdfClient.PdfUrlLink.#ctor(HiQPdfClient.RectangleFloat,System.String)">
            <summary>
            Creates an URL link object to add to PDF document
            </summary>
            <param name="linkRectangle">The link rectangle in page</param>
            <param name="url">The destination URL</param>
        </member>
        <member name="P:HiQPdfClient.PdfUrlLink.LinkRectangle">
            <summary>
            The URL link rectangle in PDF page
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfUrlLink.Url">
            <summary>
            The link destination URL
            </summary>
        </member>
        <member name="T:HiQPdfClient.PdfViewer">
            <summary>
            The PDF viewer preferences class controls the way the PDF document created by the HTML to PDF converter is displayed in a PDF viewer
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.HideToolbar">
            <summary>
            Controls if the viewer toolbars are hidden when the PDF document is displayed. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.HideMenuBar">
            <summary>
            Controls if the menu bar is hidden when the PDF document is displayed. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.HideWindowUI">
            <summary>
            Controls if the viewer navigation controls are hidden when the PDF document is displayed. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.FitWindow">
            <summary>
            Controls if the document window is resized to fit the size of the first displayed page. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.CenterWindow">
            <summary>
            Controls is the document window is positioned in the center of the screen when the PDF document is displayed. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.DisplayDocTitle">
            <summary>
            Controls if the window title bar should display the document title. 
            This property is false by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.ExitFullScreenPageMode">
            <summary>
            Controls how to display the document on exiting full screen mode. 
            This property is None by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.Direction">
            <summary>
            Controls the reading order for text. This property is LeftToRight by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.PageMode">
            <summary>
            Controls how the document will be displayed when opened.
            This property is None by default
            </summary>
        </member>
        <member name="P:HiQPdfClient.PdfViewer.PageLayout">
            <summary>
            Controls the page layout to be used when the document is opened. 
            This property is OneColumn by default
            </summary>
        </member>
        <member name="T:HiQPdfClient.PointFloat">
            <summary>
            Point with floating point coordinates
            </summary>
        </member>
        <member name="M:HiQPdfClient.PointFloat.#ctor(System.Single,System.Single)">
            <summary>
            Creates a point from X and Y coordinates
            </summary>
            <param name="x">The X coordinate</param>
            <param name="y">The Y coordinate</param>
        </member>
        <member name="P:HiQPdfClient.PointFloat.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:HiQPdfClient.PointFloat.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:HiQPdfClient.PointFloat.Empty">
            <summary>
            The null point
            </summary>
        </member>
        <member name="T:HiQPdfClient.ProxyProtocol">
            <summary>
            The supported proxy protocols used when accessing the HTML documents
            </summary>
        </member>
        <member name="F:HiQPdfClient.ProxyProtocol.Default">
            <summary>
            By default a proxy is not used 
            </summary>
        </member>
        <member name="F:HiQPdfClient.ProxyProtocol.Socks5">
            <summary>
            SOCKS 5
            </summary>
        </member>
        <member name="F:HiQPdfClient.ProxyProtocol.HTTP">
            <summary>
            HTTP
            </summary>
        </member>
        <member name="F:HiQPdfClient.ProxyProtocol.Caching">
            <summary>
            Caching HTTP
            </summary>
        </member>
        <member name="T:HiQPdfClient.RectangleFloat">
            <summary>
            Rectangle with floating point coordinates
            </summary>
        </member>
        <member name="M:HiQPdfClient.RectangleFloat.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a rectangle
            </summary>
            <param name="x">Top left corner X coordinate</param>
            <param name="y">Top left corner Y coordinate</param>
            <param name="width">Rectangle width</param>
            <param name="height">Rectangle height</param>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.X">
            <summary>
            Top left corner X
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Y">
            <summary>
            Top left corner Y
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="P:HiQPdfClient.RectangleFloat.Empty">
            <summary>
            The null rectangle
            </summary>
        </member>
        <member name="T:HiQPdfClient.SizeFloat">
            <summary>
            Size with floating point width and height
            </summary>
        </member>
        <member name="M:HiQPdfClient.SizeFloat.#ctor(System.Single,System.Single)">
            <summary>
            Creates a size
            </summary>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="P:HiQPdfClient.SizeFloat.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:HiQPdfClient.SizeFloat.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:HiQPdfClient.SizeFloat.Empty">
            <summary>
            The null size
            </summary>
        </member>
        <member name="P:InternalHiQPdfClient.HtmlToPdfTask.ApiCode">
            <summary>
            1 - HtmlToPdfConverter, 2 - HtmlToImage, 3 - HtmlToSvg, 4 - Document        
            </summary>
        </member>
        <member name="P:InternalHiQPdfReaderClient.PdfImagesExtractorTask.ApiCode">
            <summary>
            7 - PdfImagesExtractor
            </summary>
        </member>
        <member name="P:InternalHiQPdfReaderClient.PdfToHtmlTask.ApiCode">
            <summary>
            7 - PdfToHtml        
            </summary>
        </member>
        <member name="P:InternalHiQPdfReaderClient.PdfToImageTask.ApiCode">
            <summary>
            6 - PdfToImage
            </summary>
        </member>
        <member name="P:InternalHiQPdfReaderClient.PdfToTextTask.ApiCode">
            <summary>
            5 - PdfToText        
            </summary>
        </member>
    </members>
</doc>
